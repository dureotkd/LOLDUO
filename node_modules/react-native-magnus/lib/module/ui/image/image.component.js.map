{"version":3,"sources":["image.component.tsx"],"names":["Image","incomingProps","props","h","w","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","minH","minW","maxH","maxW","style","rounded","roundedTop","roundedRight","roundedBottom","roundedLeft","children","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","borderEndWidth","flex","shadow","shadowColor","position","top","right","bottom","left","zIndex","opacity","alignSelf","rest","theme","computedStyle","image"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Image as RNImage } from 'react-native';\r\n\r\nimport { getStyle } from './image.style';\r\nimport { ImageProps } from './image.type';\r\nimport { useTheme } from '../../theme';\r\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\r\n\r\nconst Image: React.FunctionComponent<ImageProps> = (incomingProps) => {\r\n  const props = useDefaultProps('Image', incomingProps, {});\r\n\r\n  const {\r\n    h,\r\n    w,\r\n    m,\r\n    mt,\r\n    mr,\r\n    mb,\r\n    ml,\r\n    ms,\r\n    p,\r\n    pr,\r\n    pt,\r\n    pb,\r\n    pl,\r\n    minH,\r\n    minW,\r\n    maxH,\r\n    maxW,\r\n    style,\r\n    rounded,\r\n    roundedTop,\r\n    roundedRight,\r\n    roundedBottom,\r\n    roundedLeft,\r\n    children,\r\n    borderColor,\r\n    borderBottomColor,\r\n    borderLeftColor,\r\n    borderTopColor,\r\n    borderRightColor,\r\n    borderWidth,\r\n    borderLeftWidth,\r\n    borderRightWidth,\r\n    borderBottomWidth,\r\n    borderTopWidth,\r\n    borderEndWidth,\r\n    flex,\r\n    shadow,\r\n    shadowColor,\r\n    position,\r\n    top,\r\n    right,\r\n    bottom,\r\n    left,\r\n    zIndex,\r\n    opacity,\r\n    alignSelf,\r\n    ...rest\r\n  } = props;\r\n  const { theme } = useTheme();\r\n  const computedStyle = getStyle(theme, props);\r\n\r\n  return (\r\n    <RNImage style={computedStyle.image} {...rest}>\r\n      {children}\r\n    </RNImage>\r\n  );\r\n};\r\n\r\n// Image.defaultProps = {};\r\n\r\nexport { Image };\r\n"]}