{"version":3,"sources":["overlay.style.tsx"],"names":["getStyle","theme","props","computedStyle","modal","backgroundColor","colors","overlayColor","alpha","overlayOpacity","rgb","string","flex","alignItems","justifyContent","container","bg","spacing","borderRadius","width","w","height","h","style","StyleSheet","create"],"mappings":"kQAAA,oDACA,yCAGA,gD,yyBAcO,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAmBC,KAAnB,CAA2C,2BACjE,GAAMC,CAAAA,aAAkB,CAAG,EAA3B,CAEAA,aAAa,CAACC,KAAd,CAAsB,CACpBC,eAAe,CAAE,mBAAM,yBAAcJ,KAAK,CAACK,MAApB,CAA4BJ,KAAK,CAACK,YAAlC,CAAN,EACdC,KADc,wBACRN,KAAK,CAACO,cADE,+DACgB,EADhB,EAEdC,GAFc,GAGdC,MAHc,EADG,CAKpBC,IAAI,CAAE,CALc,CAMpBC,UAAU,CAAE,QANQ,CAOpBC,cAAc,CAAE,QAPI,CAAtB,CAUAX,aAAa,CAACY,SAAd,0DACEV,eAAe,CAAE,yBAAcJ,KAAK,CAACK,MAApB,CAA4BJ,KAAK,CAACc,EAAlC,CADnB,EAEK,4BAAiBd,KAAjB,CAFL,EAGK,+BAAoBA,KAApB,CAA2BD,KAAK,CAACgB,OAAjC,CAHL,EAIK,oCAAyBf,KAAzB,CAAgCD,KAAK,CAACiB,YAAtC,CAJL,MAKEC,KAAK,CAAEjB,KAAK,CAACkB,CALf,CAMEC,MAAM,CAAEnB,KAAK,CAACoB,CANhB,CAOET,UAAU,CAAEX,KAAK,CAACW,UAPpB,CAQEC,cAAc,CAAEZ,KAAK,CAACY,cARxB,GAYA,GAAIZ,KAAK,CAACqB,KAAV,CAAiB,CACfpB,aAAa,CAACY,SAAd,gCACKZ,aAAa,CAACY,SADnB,EAGKb,KAAK,CAACqB,KAHX,EAKD,CAED,MAAOC,yBAAWC,MAAX,CAAkBtB,aAAlB,CAAP,CACD,CAlCM,C","sourcesContent":["import color from 'color';\r\nimport { StyleSheet } from 'react-native';\r\nimport { ThemeType } from '../../theme';\r\n\r\nimport {\r\n  createFlexStyles,\r\n  createSpacingStyles,\r\n  createBorderRadiusStyles,\r\n  getThemeColor,\r\n} from '../../theme/theme.service';\r\nimport { OverlayProps } from './overlay.type';\r\n\r\n/**\r\n * computed style\r\n *\r\n * @param theme\r\n * @param props\r\n */\r\nexport const getStyle = (theme: ThemeType, props: OverlayProps) => {\r\n  const computedStyle: any = {};\r\n\r\n  computedStyle.modal = {\r\n    backgroundColor: color(getThemeColor(theme.colors, props.overlayColor))\r\n      .alpha(props.overlayOpacity ?? 50)\r\n      .rgb()\r\n      .string(),\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  };\r\n\r\n  computedStyle.container = {\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n    ...createFlexStyles(props),\r\n    ...createSpacingStyles(props, theme.spacing),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n    width: props.w,\r\n    height: props.h,\r\n    alignItems: props.alignItems,\r\n    justifyContent: props.justifyContent,\r\n  };\r\n\r\n  // merging style props to computed style\r\n  if (props.style) {\r\n    computedStyle.container = {\r\n      ...computedStyle.container,\r\n      // @ts-ignore\r\n      ...props.style,\r\n    };\r\n  }\r\n\r\n  return StyleSheet.create(computedStyle);\r\n};\r\n"]}