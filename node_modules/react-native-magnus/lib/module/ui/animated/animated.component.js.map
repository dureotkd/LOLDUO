{"version":3,"sources":["animated.component.tsx"],"names":["Animated","incomingProps","props","bg","flexWrap","rounded","shadow","shadowColor","position","bgMode","animation","duration","delay","h","w","m","mt","mr","mb","ml","p","pr","pt","pb","pl","minH","minW","style","flexDir","roundedTop","roundedRight","roundedBottom","roundedLeft","children","bgImg","alignItems","justifyContent","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","rest","theme","computedStyle","div","image"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ImageBackground as RNImageBackground,\r\n  View as RNView,\r\n} from 'react-native';\r\nimport * as Animatable from 'react-native-animatable';\r\n\r\nimport { AnimatedProps } from './animated.type';\r\nimport { useTheme } from '../../theme';\r\nimport { getStyle } from './animated.style';\r\nimport { registerAnimations } from './animated.service';\r\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\r\n\r\nregisterAnimations();\r\n\r\nconst Animated: React.FunctionComponent<AnimatedProps> = (incomingProps) => {\r\n  const props = useDefaultProps('Animated', incomingProps, {\r\n    bg: 'transparent',\r\n    flexWrap: 'nowrap',\r\n    rounded: 'none',\r\n    shadow: 'none',\r\n    shadowColor: 'gray900',\r\n    position: 'relative',\r\n    bgMode: 'cover',\r\n    animation: 'fromTop',\r\n    duration: 150,\r\n    delay: 0,\r\n  });\r\n\r\n  const {\r\n    h,\r\n    w,\r\n    m,\r\n    mt,\r\n    mr,\r\n    mb,\r\n    ml,\r\n    p,\r\n    pr,\r\n    pt,\r\n    pb,\r\n    pl,\r\n    minH,\r\n    minW,\r\n    position,\r\n    style,\r\n    flexDir,\r\n    rounded,\r\n    roundedTop,\r\n    roundedRight,\r\n    roundedBottom,\r\n    roundedLeft,\r\n    children,\r\n    bgImg,\r\n    duration,\r\n    bgMode,\r\n    animation,\r\n    alignItems,\r\n    justifyContent,\r\n    borderColor,\r\n    borderBottomColor,\r\n    borderLeftColor,\r\n    borderTopColor,\r\n    borderRightColor,\r\n    borderWidth,\r\n    borderLeftWidth,\r\n    borderRightWidth,\r\n    borderBottomWidth,\r\n    borderTopWidth,\r\n    flexWrap,\r\n    shadow,\r\n    shadowColor,\r\n    delay,\r\n    ...rest\r\n  } = props;\r\n\r\n  const { theme } = useTheme();\r\n  const computedStyle = getStyle(theme, props);\r\n\r\n  if (bgImg) {\r\n    return (\r\n      <Animatable.View\r\n        animation={`magnus-${animation}`}\r\n        duration={duration}\r\n        easing=\"ease-in-out\"\r\n        iterationCount={1}\r\n      >\r\n        <RNImageBackground\r\n          source={bgImg}\r\n          style={computedStyle.div}\r\n          resizeMode={props.bgMode}\r\n          imageStyle={computedStyle.image}\r\n          {...rest}\r\n        >\r\n          {children}\r\n        </RNImageBackground>\r\n      </Animatable.View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Animatable.View\r\n      animation={`magnus-${animation}`}\r\n      duration={duration}\r\n      easing=\"ease-in-out\"\r\n      iterationCount={1}\r\n      delay={delay}\r\n    >\r\n      <RNView style={{ ...computedStyle.div }} {...rest}>\r\n        {children}\r\n      </RNView>\r\n    </Animatable.View>\r\n  );\r\n};\r\n\r\n// Animated.defaultProps = {\r\n//   bg: 'transparent',\r\n//   flexWrap: 'nowrap',\r\n//   rounded: 'none',\r\n//   shadow: 'none',\r\n//   shadowColor: 'gray900',\r\n//   position: 'relative',\r\n//   bgMode: 'cover',\r\n//   animation: 'fromTop',\r\n//   duration: 150,\r\n//   delay: 0,\r\n// };\r\n\r\nexport { Animated };\r\n"]}