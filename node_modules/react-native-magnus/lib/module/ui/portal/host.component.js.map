{"version":3,"sources":["host.component.tsx"],"names":["Context","React","createContext","Host","children","style","managerRef","useRef","queue","generateKey","removeKey","useEffect","length","current","action","pop","type","mount","key","update","unmount","push","op","index","findIndex","o","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, ViewStyle } from 'react-native';\r\n\r\nimport { useKey } from './hooks/useKey';\r\nimport { Manager, IManagerHandles } from './manager.component';\r\n\r\ninterface IHostProps {\r\n  children: React.ReactNode;\r\n  style?: ViewStyle;\r\n}\r\n\r\nexport interface IProvider {\r\n  mount(children: React.ReactNode): string;\r\n  update(key?: string, children?: React.ReactNode): void;\r\n  unmount(key?: string): void;\r\n}\r\n\r\nexport const Context = React.createContext<IProvider | null>(null);\r\n\r\nexport const Host = ({ children, style }: IHostProps): JSX.Element => {\r\n  const managerRef = React.useRef<IManagerHandles>(null);\r\n  const queue: {\r\n    type: 'mount' | 'update' | 'unmount';\r\n    key: string;\r\n    children?: React.ReactNode;\r\n  }[] = [];\r\n  const { generateKey, removeKey } = useKey();\r\n\r\n  React.useEffect(() => {\r\n    while (queue.length && managerRef.current) {\r\n      const action = queue.pop();\r\n\r\n      if (action) {\r\n        switch (action.type) {\r\n          case 'mount':\r\n            managerRef.current?.mount(action.key, action.children);\r\n            break;\r\n          case 'update':\r\n            managerRef.current?.update(action.key, action.children);\r\n            break;\r\n          case 'unmount':\r\n            managerRef.current?.unmount(action.key);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const mount = (children: React.ReactNode): string => {\r\n    const key = generateKey();\r\n\r\n    if (managerRef.current) {\r\n      managerRef.current.mount(key, children);\r\n    } else {\r\n      queue.push({ type: 'mount', key, children });\r\n    }\r\n\r\n    return key;\r\n  };\r\n\r\n  const update = (key: string, children: React.ReactNode): void => {\r\n    if (managerRef.current) {\r\n      managerRef.current.update(key, children);\r\n    } else {\r\n      const op = { type: 'mount' as 'mount', key, children };\r\n      const index = queue.findIndex(\r\n        (o) => o.type === 'mount' || (o.type === 'update' && o.key === key)\r\n      );\r\n\r\n      if (index > -1) {\r\n        queue[index] = op;\r\n      } else {\r\n        queue.push(op);\r\n      }\r\n    }\r\n  };\r\n\r\n  const unmount = (key: string): void => {\r\n    if (managerRef.current) {\r\n      managerRef.current.unmount(key);\r\n      removeKey(key);\r\n    } else {\r\n      queue.push({ type: 'unmount', key });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Context.Provider value={{ mount, update, unmount }}>\r\n      <View\r\n        style={[{ flex: 1 }, style]}\r\n        collapsable={false}\r\n        pointerEvents=\"box-none\"\r\n      >\r\n        {children}\r\n      </View>\r\n\r\n      <Manager ref={managerRef} />\r\n    </Context.Provider>\r\n  );\r\n};\r\n"]}