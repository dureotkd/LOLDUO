{"version":3,"sources":["fab.style.tsx"],"names":["getStyle","theme","props","computedStyle","button","bottom","right","overflow","Platform","OS","zIndex","alignItems","justifyContent","elevation","position","actions","shadow","shadowColor","colors","overlay","left","top","StyleSheet","create"],"mappings":"kQAAA,yCAGA,gD,yyBASO,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAmBC,KAAnB,CAAuC,CAC7D,GAAMC,CAAAA,aAAkB,CAAG,EAA3B,CAEAA,aAAa,CAACC,MAAd,CAAuB,CACrBC,MAAM,CAAE,CADa,CAErBC,KAAK,CAAE,CAFc,CAGrBC,QAAQ,CAAEC,sBAASC,EAAT,GAAgB,KAAhB,CAAwB,SAAxB,CAAoC,QAHzB,CAIrBC,MAAM,CAAE,CAJa,CAKrBC,UAAU,CAAE,QALS,CAMrBC,cAAc,CAAE,QANK,CAOrBC,SAAS,CAAE,CAPU,CAQrBC,QAAQ,CAAEZ,KAAK,CAACY,QARK,CAAvB,CAWAX,aAAa,CAACY,OAAd,CAAwB,CACtBD,QAAQ,CAAE,UADY,CAEtBJ,MAAM,CAAE,EAFc,CAAxB,CAKA,GAAIR,KAAK,CAACc,MAAV,CAAkB,CAChBb,aAAa,CAACC,MAAd,8CACKD,aAAa,CAACC,MADnB,EAEMH,KAAK,CAACe,MAAN,EAAgBf,KAAK,CAACe,MAAN,CAAad,KAAK,CAACc,MAAnB,CAFtB,MAGEC,WAAW,CAAE,yBAAchB,KAAK,CAACiB,MAApB,CAA4BhB,KAAK,CAACe,WAAlC,CAHf,GAKD,CAEDd,aAAa,CAACgB,OAAd,CAAwB,CACtBL,QAAQ,CAAE,UADY,CAEtBT,MAAM,CAAE,CAFc,CAGtBe,IAAI,CAAE,CAHgB,CAItBd,KAAK,CAAE,CAJe,CAKtBe,GAAG,CAAE,CALiB,CAMtBR,SAAS,CAAE,CANW,CAOtBH,MAAM,CAAE,CAPc,CAAxB,CAUA,MAAOY,yBAAWC,MAAX,CAAkBpB,aAAlB,CAAP,CACD,CAtCM,C","sourcesContent":["import { StyleSheet, Platform } from 'react-native';\r\nimport { ThemeType } from '../../theme';\r\n\r\nimport { getThemeColor } from '../../theme/theme.service';\r\nimport { FabProps } from './fab.type';\r\n\r\n/**\r\n * computed style\r\n *\r\n * @param theme\r\n * @param props\r\n */\r\nexport const getStyle = (theme: ThemeType, props: FabProps) => {\r\n  const computedStyle: any = {};\r\n\r\n  computedStyle.button = {\r\n    bottom: 0,\r\n    right: 0,\r\n    overflow: Platform.OS === 'ios' ? 'visible' : 'hidden',\r\n    zIndex: 2,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    elevation: 5,\r\n    position: props.position,\r\n  };\r\n\r\n  computedStyle.actions = {\r\n    position: 'absolute',\r\n    zIndex: 10,\r\n  };\r\n\r\n  if (props.shadow) {\r\n    computedStyle.button = {\r\n      ...computedStyle.button,\r\n      ...(theme.shadow && theme.shadow[props.shadow]),\r\n      shadowColor: getThemeColor(theme.colors, props.shadowColor),\r\n    };\r\n  }\r\n\r\n  computedStyle.overlay = {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    elevation: 0,\r\n    zIndex: 0,\r\n  };\r\n\r\n  return StyleSheet.create(computedStyle);\r\n};\r\n"]}