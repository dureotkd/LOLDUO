{"version":3,"sources":["scrolldiv.component.tsx"],"names":["ScrollDiv","incomingProps","props","bg","flexDir","flexWrap","rounded","shadow","shadowColor","position","bgMode","h","w","m","mt","mr","mb","ml","p","pr","pt","pb","pl","minH","minW","style","roundedTop","roundedRight","roundedBottom","roundedLeft","children","bgImg","alignItems","justifyContent","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","rest","theme","computedStyle","div","image"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ScrollView as RNScrollView,\r\n  ImageBackground as RNImageBackground,\r\n} from 'react-native';\r\n\r\nimport { ScrollDivProps } from './scrolldiv.type';\r\nimport { getStyle } from './scrolldiv.style';\r\nimport { useTheme } from '../../theme';\r\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\r\n\r\nconst ScrollDiv: React.FunctionComponent<ScrollDivProps> = (incomingProps) => {\r\n  const props = useDefaultProps('ScrollDiv', incomingProps, {\r\n    bg: 'transparent',\r\n    flexDir: 'column',\r\n    flexWrap: 'nowrap',\r\n    rounded: 'none',\r\n    shadow: 0,\r\n    shadowColor: 'gray900',\r\n    position: 'relative',\r\n    bgMode: 'cover',\r\n  });\r\n\r\n  const {\r\n    h,\r\n    w,\r\n    m,\r\n    mt,\r\n    mr,\r\n    mb,\r\n    ml,\r\n    p,\r\n    pr,\r\n    pt,\r\n    pb,\r\n    pl,\r\n    minH,\r\n    minW,\r\n    position,\r\n    style,\r\n    flexDir,\r\n    rounded,\r\n    roundedTop,\r\n    roundedRight,\r\n    roundedBottom,\r\n    roundedLeft,\r\n    children,\r\n    bgImg,\r\n    bgMode,\r\n    alignItems,\r\n    justifyContent,\r\n    borderColor,\r\n    borderBottomColor,\r\n    borderLeftColor,\r\n    borderTopColor,\r\n    borderRightColor,\r\n    borderWidth,\r\n    borderLeftWidth,\r\n    borderRightWidth,\r\n    borderBottomWidth,\r\n    borderTopWidth,\r\n    flexWrap,\r\n    shadow,\r\n    shadowColor,\r\n    ...rest\r\n  } = props;\r\n  const { theme } = useTheme();\r\n  const computedStyle = getStyle(theme, props);\r\n\r\n  if (bgImg) {\r\n    return (\r\n      <RNImageBackground\r\n        source={bgImg}\r\n        style={computedStyle.div}\r\n        resizeMode={props.bgMode}\r\n        imageStyle={computedStyle.image}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </RNImageBackground>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <RNScrollView style={computedStyle.div} {...rest}>\r\n      {children}\r\n    </RNScrollView>\r\n  );\r\n};\r\n\r\n// ScrollDiv.defaultProps = {\r\n//   bg: 'transparent',\r\n//   flexDir: 'column',\r\n//   flexWrap: 'nowrap',\r\n//   rounded: 'none',\r\n//   shadow: 0,\r\n//   shadowColor: 'gray900',\r\n//   position: 'relative',\r\n//   bgMode: 'cover',\r\n// };\r\n\r\nexport { ScrollDiv };\r\n"]}