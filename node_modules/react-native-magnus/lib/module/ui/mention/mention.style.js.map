{"version":3,"sources":["mention.style.tsx"],"names":["getStyle","theme","props","computedStyle","list","flex","zIndex","backgroundColor","colors","bg","spacing","borderRadius","loading","height","marginTop","alignItems","justifyContent","shadow","shadowColor","style","container","StyleSheet","create"],"mappings":"kQAAA,yCAGA,gD,yyBAgBO,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAmBC,KAAnB,CAA2C,CACjE,GAAMC,CAAAA,aAAkB,CAAG,EAA3B,CAEAA,aAAa,CAACC,IAAd,wEACEC,IAAI,CAAE,CADR,CAEEC,MAAM,CAAE,EAFV,CAGEC,eAAe,CAAE,yBAAcN,KAAK,CAACO,MAApB,CAA4BN,KAAK,CAACO,EAAlC,CAHnB,EAIK,+BAAoBP,KAApB,CAJL,EAKK,+BAAoBA,KAApB,CAA2BD,KAAK,CAACS,OAAjC,CALL,EAMK,mCAAwBR,KAAxB,CANL,EAOK,mCAAwBA,KAAxB,CAA+BD,KAAK,CAACO,MAArC,CAPL,EAQK,oCAAyBN,KAAzB,CAAgCD,KAAK,CAACU,YAAtC,CARL,EAWAR,aAAa,CAACS,OAAd,wEACEC,MAAM,CAAE,EADV,CAEEC,SAAS,CAAE,CAAC,EAFd,CAGER,MAAM,CAAE,EAHV,CAIES,UAAU,CAAE,QAJd,CAKEC,cAAc,CAAE,QALlB,EAMK,+BAAoBd,KAApB,CAA2BD,KAAK,CAACS,OAAjC,CANL,MAOEH,eAAe,CAAE,yBAAcN,KAAK,CAACO,MAApB,CAA4BN,KAAK,CAACO,EAAlC,CAPnB,EAQK,mCAAwBP,KAAxB,CARL,EASK,mCAAwBA,KAAxB,CAA+BD,KAAK,CAACO,MAArC,CATL,EAUK,oCAAyBN,KAAzB,CAAgCD,KAAK,CAACU,YAAtC,CAVL,MAWEN,IAAI,CAAE,CAXR,GAcA,GAAIH,KAAK,CAACe,MAAV,CAAkB,CAChBd,aAAa,CAACC,IAAd,8CACKD,aAAa,CAACC,IADnB,EAEMH,KAAK,CAACgB,MAAN,EAAgBhB,KAAK,CAACgB,MAAN,CAAaf,KAAK,CAACe,MAAnB,CAFtB,MAGEC,WAAW,CAAE,yBAAcjB,KAAK,CAACO,MAApB,CAA4BN,KAAK,CAACgB,WAAlC,CAHf,GAKD,CAGD,GAAIhB,KAAK,CAACiB,KAAV,CAAiB,CACfhB,aAAa,CAACiB,SAAd,gCACKjB,aAAa,CAACiB,SADnB,EAGKlB,KAAK,CAACiB,KAHX,EAKD,CAED,MAAOE,yBAAWC,MAAX,CAAkBnB,aAAlB,CAAP,CACD,CA9CM,C","sourcesContent":["import { StyleSheet } from 'react-native';\r\nimport { ThemeType } from '../../theme';\r\n\r\nimport {\r\n  createSpacingStyles,\r\n  createBorderWidthStyles,\r\n  createBorderColorStyles,\r\n  createBorderRadiusStyles,\r\n  createPositionStyle,\r\n  getThemeColor,\r\n} from '../../theme/theme.service';\r\nimport { MentionProps } from './mention.type';\r\n\r\n/**\r\n * computed style\r\n *\r\n * @param theme\r\n * @param props\r\n */\r\nexport const getStyle = (theme: ThemeType, props: MentionProps) => {\r\n  const computedStyle: any = {};\r\n\r\n  computedStyle.list = {\r\n    flex: 1,\r\n    zIndex: 99,\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n    ...createPositionStyle(props),\r\n    ...createSpacingStyles(props, theme.spacing),\r\n    ...createBorderWidthStyles(props),\r\n    ...createBorderColorStyles(props, theme.colors),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n  };\r\n\r\n  computedStyle.loading = {\r\n    height: 60,\r\n    marginTop: -60,\r\n    zIndex: 99,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    ...createSpacingStyles(props, theme.spacing),\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n    ...createBorderWidthStyles(props),\r\n    ...createBorderColorStyles(props, theme.colors),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n    flex: 1,\r\n  };\r\n\r\n  if (props.shadow) {\r\n    computedStyle.list = {\r\n      ...computedStyle.list,\r\n      ...(theme.shadow && theme.shadow[props.shadow]),\r\n      shadowColor: getThemeColor(theme.colors, props.shadowColor),\r\n    };\r\n  }\r\n\r\n  // merging style props to computed style\r\n  if (props.style) {\r\n    computedStyle.container = {\r\n      ...computedStyle.container,\r\n      // @ts-ignore\r\n      ...props.style,\r\n    };\r\n  }\r\n\r\n  return StyleSheet.create(computedStyle);\r\n};\r\n"]}