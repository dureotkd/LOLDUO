{"version":3,"sources":["radio.service.tsx"],"names":["getIconName","checked","getIconColor","disabled","activeColor","inactiveColor","theme","colors"],"mappings":"yGACA,gDAOO,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAA8B,IAA7BC,CAAAA,OAA6B,2DAAV,KAAU,CACvD,OAAQ,IAAR,EACE,IAAKA,CAAAA,OAAL,CACE,MAAO,sBAAP,CACF,QACE,MAAO,wBAAP,CAJJ,CAMD,CAPM,C,gCAeA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAC1BD,OAD0B,CAE1BE,QAF0B,CAG1BC,WAH0B,CAI1BC,aAJ0B,CAK1BC,KAL0B,CAMvB,CACH,OAAQ,IAAR,EACE,IAAKH,CAAAA,QAAL,CACE,MAAO,yBAAcG,KAAK,CAACC,MAApB,CAA4BF,aAA5B,CAAP,CACF,IAAKJ,CAAAA,OAAL,CACE,MAAO,yBAAcK,KAAK,CAACC,MAApB,CAA4BH,WAA5B,CAAP,CACF,QACE,MAAO,yBAAcE,KAAK,CAACC,MAApB,CAA4BF,aAA5B,CAAP,CANJ,CAQD,CAfM,C","sourcesContent":["import { ThemeType } from '../../theme';\r\nimport { getThemeColor } from '../../theme/theme.service';\r\n\r\n/**\r\n * get icon name to be used based on checked state\r\n *\r\n * @param checked\r\n */\r\nexport const getIconName = (checked: boolean = false) => {\r\n  switch (true) {\r\n    case checked:\r\n      return 'radio-button-checked';\r\n    default:\r\n      return 'radio-button-unchecked';\r\n  }\r\n};\r\n\r\n/**\r\n * get icon color based on state\r\n *\r\n * @param checked\r\n * @param disabled\r\n */\r\nexport const getIconColor = (\r\n  checked: any,\r\n  disabled: any,\r\n  activeColor: any,\r\n  inactiveColor: any,\r\n  theme: ThemeType\r\n) => {\r\n  switch (true) {\r\n    case disabled:\r\n      return getThemeColor(theme.colors, inactiveColor);\r\n    case checked:\r\n      return getThemeColor(theme.colors, activeColor);\r\n    default:\r\n      return getThemeColor(theme.colors, inactiveColor);\r\n  }\r\n};\r\n"]}