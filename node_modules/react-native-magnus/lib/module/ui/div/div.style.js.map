{"version":3,"sources":["div.style.tsx"],"names":["getStyle","theme","props","computedStyle","div","flexDirection","row","flexDir","flexWrap","alignItems","justifyContent","height","h","width","w","minWidth","minW","minHeight","minH","alignSelf","maxWidth","maxW","maxHeight","maxH","opacity","overflow","zIndex","borderStyle","backgroundColor","colors","bg","flex","spacing","borderRadius","image","style","StyleSheet","create"],"mappings":"kQAAA,yCAGA,gD,yyBAiBO,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAmBC,KAAnB,CAAuC,CAC7D,GAAMC,CAAAA,aAAkB,CAAG,EAA3B,CAEAA,aAAa,CAACC,GAAd,sFACEC,aAAa,CAAEH,KAAK,CAACI,GAAN,CAAY,KAAZ,CAAoBJ,KAAK,CAACK,OAD3C,CAEEC,QAAQ,CAAEN,KAAK,CAACM,QAFlB,CAGEC,UAAU,CAAEP,KAAK,CAACO,UAHpB,CAIEC,cAAc,CAAER,KAAK,CAACQ,cAJxB,CAKEC,MAAM,CAAET,KAAK,CAACU,CALhB,CAMEC,KAAK,CAAEX,KAAK,CAACY,CANf,CAOEC,QAAQ,CAAEb,KAAK,CAACc,IAPlB,CAQEC,SAAS,CAAEf,KAAK,CAACgB,IARnB,CASEC,SAAS,CAAEjB,KAAK,CAACiB,SATnB,CAUEC,QAAQ,CAAElB,KAAK,CAACmB,IAVlB,CAWEC,SAAS,CAAEpB,KAAK,CAACqB,IAXnB,CAYEC,OAAO,CAAEtB,KAAK,CAACsB,OAZjB,CAaEC,QAAQ,CAAEvB,KAAK,CAACuB,QAblB,CAcEC,MAAM,CAAExB,KAAK,CAACwB,MAdhB,CAeEC,WAAW,CAAEzB,KAAK,CAACyB,WAfrB,CAgBEC,eAAe,CAAE,yBAAc3B,KAAK,CAAC4B,MAApB,CAA4B3B,KAAK,CAAC4B,EAAlC,CAhBnB,CAiBEC,IAAI,CAAE7B,KAAK,CAAC6B,IAjBd,EAkBK,+BAAoB7B,KAApB,CAlBL,EAmBK,8BAAmBA,KAAnB,CAA0BD,KAA1B,CAnBL,EAoBK,mCAAwBC,KAAxB,CApBL,EAqBK,+BAAoBA,KAApB,CAA2BD,KAAK,CAAC+B,OAAjC,CArBL,EAsBK,mCAAwB9B,KAAxB,CAA+BD,KAAK,CAAC4B,MAArC,CAtBL,EAuBK,oCAAyB3B,KAAzB,CAAgCD,KAAK,CAACgC,YAAtC,CAvBL,EA0BA9B,aAAa,CAAC+B,KAAd,kBACK,oCAAyBhC,KAAzB,CAAgCD,KAAK,CAACgC,YAAtC,CADL,EAKA,GAAI/B,KAAK,CAACiC,KAAV,CAAiB,CACfhC,aAAa,CAACC,GAAd,gCACKD,aAAa,CAACC,GADnB,EAGKF,KAAK,CAACiC,KAHX,EAKD,CAED,MAAOC,yBAAWC,MAAX,CAAkBlC,aAAlB,CAAP,CACD,CA3CM,C","sourcesContent":["import { StyleSheet } from 'react-native';\r\nimport { ThemeType } from '../../theme';\r\n\r\nimport {\r\n  createShadowStyles,\r\n  createPositionStyle,\r\n  createSpacingStyles,\r\n  createBorderWidthStyles,\r\n  createBorderColorStyles,\r\n  createBorderRadiusStyles,\r\n  getThemeColor,\r\n} from '../../theme/theme.service';\r\nimport { DivProps } from './div.type';\r\n\r\n/**\r\n * computed style\r\n *\r\n * @param theme\r\n * @param props\r\n */\r\nexport const getStyle = (theme: ThemeType, props: DivProps) => {\r\n  const computedStyle: any = {};\r\n\r\n  computedStyle.div = {\r\n    flexDirection: props.row ? 'row' : props.flexDir,\r\n    flexWrap: props.flexWrap,\r\n    alignItems: props.alignItems,\r\n    justifyContent: props.justifyContent,\r\n    height: props.h,\r\n    width: props.w,\r\n    minWidth: props.minW,\r\n    minHeight: props.minH,\r\n    alignSelf: props.alignSelf,\r\n    maxWidth: props.maxW,\r\n    maxHeight: props.maxH,\r\n    opacity: props.opacity,\r\n    overflow: props.overflow,\r\n    zIndex: props.zIndex,\r\n    borderStyle: props.borderStyle,\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n    flex: props.flex,\r\n    ...createPositionStyle(props),\r\n    ...createShadowStyles(props, theme),\r\n    ...createBorderWidthStyles(props),\r\n    ...createSpacingStyles(props, theme.spacing),\r\n    ...createBorderColorStyles(props, theme.colors),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n  };\r\n\r\n  computedStyle.image = {\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n  };\r\n\r\n  // merging custom style props to computed style\r\n  if (props.style) {\r\n    computedStyle.div = {\r\n      ...computedStyle.div,\r\n      // @ts-ignore\r\n      ...props.style,\r\n    };\r\n  }\r\n\r\n  return StyleSheet.create(computedStyle);\r\n};\r\n"]}