{"version":3,"sources":["icon.style.tsx"],"names":["getStyle","theme","props","computedStyle","container","height","h","width","w","minHeight","minH","minWidth","minW","maxWidth","maxW","maxHeight","maxH","top","left","right","bottom","position","alignSelf","alignItems","justifyContent","opacity","color","colors","fontSize","backgroundColor","bg","spacing","borderRadius","style","StyleSheet","create"],"mappings":"kQAAA,yCAGA,gD,yyBAiBO,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAmBC,KAAnB,CAAwC,CAC9D,GAAMC,CAAAA,aAAkB,CAAG,EAA3B,CAEAA,aAAa,CAACC,SAAd,wEACEC,MAAM,CAAEH,KAAK,CAACI,CADhB,CAEEC,KAAK,CAAEL,KAAK,CAACM,CAFf,CAGEC,SAAS,CAAEP,KAAK,CAACQ,IAHnB,CAIEC,QAAQ,CAAET,KAAK,CAACU,IAJlB,CAKEC,QAAQ,CAAEX,KAAK,CAACY,IALlB,CAMEC,SAAS,CAAEb,KAAK,CAACc,IANnB,CAOEC,GAAG,CAAEf,KAAK,CAACe,GAPb,CAQEC,IAAI,CAAEhB,KAAK,CAACgB,IARd,CASEC,KAAK,CAAEjB,KAAK,CAACiB,KATf,CAUEC,MAAM,CAAElB,KAAK,CAACkB,MAVhB,CAWEC,QAAQ,CAAEnB,KAAK,CAACmB,QAXlB,CAYEC,SAAS,CAAEpB,KAAK,CAACoB,SAZnB,CAaEC,UAAU,CAAE,QAbd,CAcEC,cAAc,CAAE,QAdlB,CAeEC,OAAO,CAAEvB,KAAK,CAACuB,OAfjB,CAgBEC,KAAK,CAAE,yBAAczB,KAAK,CAAC0B,MAApB,CAA4BzB,KAAK,CAACwB,KAAlC,CAhBT,CAiBEE,QAAQ,CAAE,4BAAiB3B,KAAK,CAAC2B,QAAvB,CAAiC1B,KAAK,CAAC0B,QAAvC,CAjBZ,CAkBEC,eAAe,CAAE,yBAAc5B,KAAK,CAAC0B,MAApB,CAA4BzB,KAAK,CAAC4B,EAAlC,CAlBnB,EAmBK,mCAAwB5B,KAAxB,CAnBL,EAoBK,+BAAoBA,KAApB,CAA2BD,KAAK,CAAC8B,OAAjC,CApBL,EAqBK,mCAAwB7B,KAAxB,CAA+BD,KAAK,CAAC0B,MAArC,CArBL,EAsBK,oCAAyBzB,KAAzB,CAAgCD,KAAK,CAAC+B,YAAtC,CAtBL,EAuBK,8BAAmB9B,KAAnB,CAA0BD,KAA1B,CAvBL,EA2BA,GAAIC,KAAK,CAAC+B,KAAV,CAAiB,CACf9B,aAAa,CAACC,SAAd,gCACKD,aAAa,CAACC,SADnB,EAGKF,KAAK,CAAC+B,KAHX,EAKD,CAED,MAAOC,yBAAWC,MAAX,CAAkBhC,aAAlB,CAAP,CACD,CAvCM,C","sourcesContent":["import { StyleSheet } from 'react-native';\r\nimport { ThemeType } from '../../theme';\r\n\r\nimport {\r\n  getThemeProperty,\r\n  createShadowStyles,\r\n  createSpacingStyles,\r\n  createBorderColorStyles,\r\n  createBorderWidthStyles,\r\n  createBorderRadiusStyles,\r\n  getThemeColor,\r\n} from '../../theme/theme.service';\r\nimport { IconProps } from './icon.type';\r\n\r\n/**\r\n * computed style\r\n *\r\n * @param theme\r\n * @param props\r\n */\r\nexport const getStyle = (theme: ThemeType, props: IconProps) => {\r\n  const computedStyle: any = {};\r\n\r\n  computedStyle.container = {\r\n    height: props.h,\r\n    width: props.w,\r\n    minHeight: props.minH,\r\n    minWidth: props.minW,\r\n    maxWidth: props.maxW,\r\n    maxHeight: props.maxH,\r\n    top: props.top,\r\n    left: props.left,\r\n    right: props.right,\r\n    bottom: props.bottom,\r\n    position: props.position,\r\n    alignSelf: props.alignSelf,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    opacity: props.opacity,\r\n    color: getThemeColor(theme.colors, props.color),\r\n    fontSize: getThemeProperty(theme.fontSize, props.fontSize),\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n    ...createBorderWidthStyles(props),\r\n    ...createSpacingStyles(props, theme.spacing),\r\n    ...createBorderColorStyles(props, theme.colors),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n    ...createShadowStyles(props, theme),\r\n  };\r\n\r\n  // merging style props to computed style\r\n  if (props.style) {\r\n    computedStyle.container = {\r\n      ...computedStyle.container,\r\n      // @ts-ignore\r\n      ...props.style,\r\n    };\r\n  }\r\n\r\n  return StyleSheet.create(computedStyle);\r\n};\r\n"]}