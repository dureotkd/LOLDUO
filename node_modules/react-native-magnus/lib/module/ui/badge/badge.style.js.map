{"version":3,"sources":["badge.style.tsx"],"names":["getStyle","theme","props","computedStyle","container","alignSelf","minHeight","count","minWidth","div","zIndex","height","h","width","w","alignItems","justifyContent","opacity","children","backgroundColor","colors","bg","spacing","borderRadius","position","text","paddingHorizontal","style","StyleSheet","create"],"mappings":"kQAAA,yCAGA,gD,yyBAiBO,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CACtBC,KADsB,CAEtBC,KAFsB,CAGnB,CACH,GAAMC,CAAAA,aAAkB,CAAG,EAA3B,CAEAA,aAAa,CAACC,SAAd,CAA0B,CACxBC,SAAS,CAAEH,KAAK,CAACG,SADO,CAExBC,SAAS,CAAE,MAAOJ,CAAAA,KAAK,CAACK,KAAb,GAAuB,WAAvB,CAAqC,EAArC,CAA0C,EAF7B,CAGxBC,QAAQ,CAAE,MAAON,CAAAA,KAAK,CAACK,KAAb,GAAuB,WAAvB,CAAqC,EAArC,CAA0C,EAH5B,CAA1B,CAMAJ,aAAa,CAACM,GAAd,oGACEC,MAAM,CAAE,CADV,CAEEC,MAAM,CAAET,KAAK,CAACU,CAFhB,CAGEC,KAAK,CAAEX,KAAK,CAACY,CAHf,CAIEC,UAAU,CAAE,QAJd,CAKEC,cAAc,CAAE,QALlB,CAMEX,SAAS,CAAE,YANb,CAOEY,OAAO,CAAEf,KAAK,CAACe,OAPjB,CAQEX,SAAS,CAAE,MAAOJ,CAAAA,KAAK,CAACgB,QAAb,GAA0B,QAA1B,CAAqC,EAArC,CAA0C,EARvD,CASEC,eAAe,CAAE,yBAAclB,KAAK,CAACmB,MAApB,CAA4BlB,KAAK,CAACmB,EAAlC,CATnB,CAUEb,QAAQ,CAAE,MAAON,CAAAA,KAAK,CAACgB,QAAb,GAA0B,QAA1B,CAAqC,EAArC,CAA0C,EAVtD,EAWK,+BAAoBhB,KAApB,CAXL,EAYK,mCAAwBA,KAAxB,CAZL,EAaK,8BAAmBA,KAAnB,CAA0BD,KAA1B,CAbL,EAcK,+BAAoBC,KAApB,CAA2BD,KAAK,CAACqB,OAAjC,CAdL,EAeK,mCAAwBpB,KAAxB,CAA+BD,KAAK,CAACmB,MAArC,CAfL,EAgBK,oCAAyBlB,KAAzB,CAAgCD,KAAK,CAACsB,YAAtC,CAhBL,MAiBEC,QAAQ,CAAE,MAAOtB,CAAAA,KAAK,CAACgB,QAAb,GAA0B,QAA1B,CAAqC,UAArC,CAAkDhB,KAAK,CAACsB,QAjBpE,GAoBArB,aAAa,CAACsB,IAAd,CAAqB,CACnBC,iBAAiB,CAAE,EADA,CAArB,CAKA,GAAIxB,KAAK,CAACyB,KAAV,CAAiB,CACfxB,aAAa,CAACM,GAAd,gCACKN,aAAa,CAACM,GADnB,EAGKP,KAAK,CAACyB,KAHX,EAKD,CAED,MAAOC,yBAAWC,MAAX,CAAkB1B,aAAlB,CAAP,CACD,CA9CM,C","sourcesContent":["import { StyleSheet } from 'react-native';\r\nimport { ThemeType } from '../../theme';\r\n\r\nimport {\r\n  createShadowStyles,\r\n  createSpacingStyles,\r\n  createBorderWidthStyles,\r\n  createBorderColorStyles,\r\n  createBorderRadiusStyles,\r\n  createPositionStyle,\r\n  getThemeColor,\r\n} from '../../theme/theme.service';\r\nimport { BadgeProps } from './badge.type';\r\n\r\n/**\r\n * computed style\r\n *\r\n * @param theme\r\n * @param props\r\n */\r\nexport const getStyle = (\r\n  theme: ThemeType,\r\n  props: React.PropsWithChildren<BadgeProps>\r\n) => {\r\n  const computedStyle: any = {};\r\n\r\n  computedStyle.container = {\r\n    alignSelf: props.alignSelf,\r\n    minHeight: typeof props.count === 'undefined' ? 10 : 30,\r\n    minWidth: typeof props.count === 'undefined' ? 10 : 30,\r\n  };\r\n\r\n  computedStyle.div = {\r\n    zIndex: 1,\r\n    height: props.h,\r\n    width: props.w,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    alignSelf: 'flex-start',\r\n    opacity: props.opacity,\r\n    minHeight: typeof props.children === 'string' ? 30 : 10,\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n    minWidth: typeof props.children === 'string' ? 30 : 10,\r\n    ...createPositionStyle(props),\r\n    ...createBorderWidthStyles(props),\r\n    ...createShadowStyles(props, theme),\r\n    ...createSpacingStyles(props, theme.spacing),\r\n    ...createBorderColorStyles(props, theme.colors),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n    position: typeof props.children !== 'string' ? 'absolute' : props.position,\r\n  };\r\n\r\n  computedStyle.text = {\r\n    paddingHorizontal: 10,\r\n  };\r\n\r\n  // merging style props to computed style\r\n  if (props.style) {\r\n    computedStyle.div = {\r\n      ...computedStyle.div,\r\n      // @ts-ignore\r\n      ...props.style,\r\n    };\r\n  }\r\n\r\n  return StyleSheet.create(computedStyle);\r\n};\r\n"]}