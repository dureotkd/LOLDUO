{"version":3,"sources":["checkbox.service.tsx"],"names":["getIconName","checked","disabled","getIconColor","activeColor","inactiveColor","theme","colors","getIcon","props","fontSize","loaderColor","activeIcon","inactiveIcon","iconName","iconColor","loading","zIndex","position"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { ActivityIndicator } from 'react-native';\r\n\r\nimport { ThemeType } from '../..//theme';\r\nimport { Icon } from '../icon/icon.component';\r\nimport { CheckboxProps } from './checkbox.type';\r\nimport { getThemeProperty, getThemeColor } from '../../theme/theme.service';\r\n\r\n/**\r\n * get icon name based on state\r\n */\r\nexport const getIconName = (\r\n  checked: boolean = false,\r\n  disabled: boolean = false\r\n) => {\r\n  switch (true) {\r\n    case disabled:\r\n      return 'indeterminate-check-box';\r\n    case checked:\r\n      return 'check-box';\r\n    default:\r\n      return 'check-box-outline-blank';\r\n  }\r\n};\r\n\r\n/**\r\n * get icon name\r\n *\r\n * @param checked\r\n * @param disabled\r\n */\r\nexport const getIconColor = (\r\n  checked: any,\r\n  disabled: any,\r\n  activeColor: any,\r\n  inactiveColor: any,\r\n  theme: ThemeType\r\n) => {\r\n  switch (true) {\r\n    case disabled:\r\n      return getThemeColor(theme.colors, inactiveColor);\r\n    case checked:\r\n      return getThemeColor(theme.colors, activeColor);\r\n    default:\r\n      return getThemeColor(theme.colors, inactiveColor);\r\n  }\r\n};\r\n\r\n/*\r\n * get icon\r\n * shows activity indication if loading state is true\r\n */\r\nexport const getIcon = (\r\n  theme: ThemeType,\r\n  props: CheckboxProps,\r\n  checked: boolean\r\n) => {\r\n  const {\r\n    fontSize,\r\n    loaderColor,\r\n    activeIcon,\r\n    activeColor,\r\n    inactiveColor,\r\n    disabled,\r\n    inactiveIcon,\r\n  } = props;\r\n\r\n  const iconName = getIconName(checked, disabled ?? false);\r\n  const iconColor = getIconColor(\r\n    checked,\r\n    disabled,\r\n    activeColor,\r\n    inactiveColor,\r\n    theme\r\n  );\r\n\r\n  if (props.loading) {\r\n    return (\r\n      <ActivityIndicator\r\n        size={getThemeProperty(theme.fontSize, fontSize)}\r\n        color={getThemeColor(theme.colors, loaderColor)}\r\n        style={{ zIndex: 2, position: 'relative' }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (checked) {\r\n    if (props.activeIcon && typeof activeIcon === 'string') {\r\n      return (\r\n        <Icon\r\n          name={activeIcon}\r\n          color={iconColor}\r\n          style={{ zIndex: 2, position: 'relative' }}\r\n          fontFamily=\"AntDesign\"\r\n          fontSize={fontSize}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (props.activeIcon) {\r\n      return activeIcon;\r\n    }\r\n  } else {\r\n    if (inactiveIcon && typeof inactiveIcon === 'string') {\r\n      return (\r\n        <Icon\r\n          name={inactiveIcon}\r\n          color={iconColor}\r\n          style={{ zIndex: 2, position: 'relative' }}\r\n          fontFamily=\"AntDesign\"\r\n          fontSize={fontSize}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (inactiveIcon) {\r\n      return inactiveIcon;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Icon\r\n      name={iconName}\r\n      color={iconColor}\r\n      style={{ zIndex: 2, position: 'relative' }}\r\n      fontFamily=\"MaterialIcons\"\r\n      fontSize={fontSize}\r\n    />\r\n  );\r\n};\r\n"]}