{"version":3,"sources":["tooltip.style.tsx"],"names":["getStyle","theme","props","state","computedStyle","container","alignSelf","height","h","width","w","minWidth","minW","minHeight","minH","maxWidth","maxW","maxHeight","maxH","opacity","zIndex","spacing","colors","borderRadius","backgroundColor","bg","image","triangle","left","buttonWidth","top","invert","menuHeight","borderStyle","borderLeftWidth","borderRightWidth","borderBottomWidth","borderLeftColor","borderRightColor","borderBottomColor","text","fontWeight","textDecorationLine","textDecorLine","textDecorationStyle","textDecorStyle","letterSpacing","fontStyle","textAlignVertical","lineHeight","textAlign","textTransform","fontSize","color","style","StyleSheet","create"],"mappings":"kQAAA,yCAGA,gD,yyBAkBO,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAmBC,KAAnB,CAAwCC,KAAxC,CAAuD,CAC7E,GAAMC,CAAAA,aAAkB,CAAG,EAA3B,CAEAA,aAAa,CAACC,SAAd,oGACEC,SAAS,CAAE,QADb,CAEEC,MAAM,CAAEL,KAAK,CAACM,CAFhB,CAGEC,KAAK,CAAEP,KAAK,CAACQ,CAHf,CAIEC,QAAQ,CAAET,KAAK,CAACU,IAJlB,CAKEC,SAAS,CAAEX,KAAK,CAACY,IALnB,CAMEC,QAAQ,CAAEb,KAAK,CAACc,IANlB,CAOEC,SAAS,CAAEf,KAAK,CAACgB,IAPnB,CAQEC,OAAO,CAAEjB,KAAK,CAACiB,OARjB,CASEC,MAAM,CAAElB,KAAK,CAACkB,MAThB,EAUK,4BAAiBlB,KAAjB,CAVL,EAWK,8BAAmBA,KAAnB,CAA0BD,KAA1B,CAXL,EAYK,mCAAwBC,KAAxB,CAZL,EAaK,+BAAoBA,KAApB,CAA2BD,KAAK,CAACoB,OAAjC,CAbL,EAcK,mCAAwBnB,KAAxB,CAA+BD,KAAK,CAACqB,MAArC,CAdL,EAeK,oCAAyBpB,KAAzB,CAAgCD,KAAK,CAACsB,YAAtC,CAfL,MAgBEC,eAAe,CAAE,yBAAcvB,KAAK,CAACqB,MAApB,CAA4BpB,KAAK,CAACuB,EAAlC,CAhBnB,GAmBArB,aAAa,CAACsB,KAAd,kBACK,oCAAyBxB,KAAzB,CAAgCD,KAAK,CAACsB,YAAtC,CADL,EAIAnB,aAAa,CAACuB,QAAd,CAAyB,CACvBlB,KAAK,CAAE,CADgB,CAEvBF,MAAM,CAAE,CAFe,CAGvBqB,IAAI,CAAEzB,KAAK,CAACyB,IAAN,CAAazB,KAAK,CAAC0B,WAAN,CAAoB,CAAjC,CAAqC,CAHpB,CAIvBC,GAAG,CAAE3B,KAAK,CAAC4B,MAAN,CAAe5B,KAAK,CAAC6B,UAAN,CAAmB,CAAlC,CAAsC,CAJpB,CAKvBC,WAAW,CAAE,OALU,CAMvBC,eAAe,CAAE,CANM,CAOvBC,gBAAgB,CAAE,CAPK,CAQvBC,iBAAiB,CAAE,EARI,CASvBC,eAAe,CAAE,aATM,CAUvBC,gBAAgB,CAAE,aAVK,CAWvBnB,OAAO,CAAEjB,KAAK,CAACiB,OAXQ,CAYvBC,MAAM,CAAElB,KAAK,CAACkB,MAZS,CAavBmB,iBAAiB,CAAE,yBAActC,KAAK,CAACqB,MAApB,CAA4BpB,KAAK,CAACuB,EAAlC,CAbI,CAAzB,CAgBArB,aAAa,CAACoC,IAAd,CAAqB,CACnBC,UAAU,CAAEvC,KAAK,CAACuC,UADC,CAEnBC,kBAAkB,CAAExC,KAAK,CAACyC,aAFP,CAGnBC,mBAAmB,CAAE1C,KAAK,CAAC2C,cAHR,CAInBC,aAAa,CAAE5C,KAAK,CAAC4C,aAJF,CAKnBC,SAAS,CAAE7C,KAAK,CAAC6C,SALE,CAMnBC,iBAAiB,CAAE9C,KAAK,CAAC8C,iBANN,CAOnBC,UAAU,CAAE/C,KAAK,CAAC+C,UAPC,CAQnBC,SAAS,CAAEhD,KAAK,CAACgD,SARE,CASnBC,aAAa,CAAEjD,KAAK,CAACiD,aATF,CAUnBC,QAAQ,CAAE,4BAAiBnD,KAAK,CAACmD,QAAvB,CAAiClD,KAAK,CAACkD,QAAvC,CAVS,CAWnBC,KAAK,CAAE,yBAAcpD,KAAK,CAACqB,MAApB,CAA4BpB,KAAK,CAACmD,KAAlC,CAXY,CAArB,CAeA,GAAInD,KAAK,CAACoD,KAAV,CAAiB,CACflD,aAAa,CAACC,SAAd,gCACKD,aAAa,CAACC,SADnB,EAGKH,KAAK,CAACoD,KAHX,EAKD,CAED,MAAOC,yBAAWC,MAAX,CAAkBpD,aAAlB,CAAP,CACD,CAlEM,C","sourcesContent":["import { StyleSheet } from 'react-native';\r\nimport { ThemeType } from '../../theme';\r\n\r\nimport {\r\n  getThemeProperty,\r\n  createFlexStyles,\r\n  createShadowStyles,\r\n  createSpacingStyles,\r\n  createBorderWidthStyles,\r\n  createBorderColorStyles,\r\n  createBorderRadiusStyles,\r\n  getThemeColor,\r\n} from '../../theme/theme.service';\r\nimport { TooltipProps } from './tooltip.type';\r\n\r\n/**\r\n * computed style\r\n *\r\n * @param theme\r\n * @param props\r\n */\r\nexport const getStyle = (theme: ThemeType, props: TooltipProps, state: any) => {\r\n  const computedStyle: any = {};\r\n\r\n  computedStyle.container = {\r\n    alignSelf: 'center',\r\n    height: props.h,\r\n    width: props.w,\r\n    minWidth: props.minW,\r\n    minHeight: props.minH,\r\n    maxWidth: props.maxW,\r\n    maxHeight: props.maxH,\r\n    opacity: props.opacity,\r\n    zIndex: props.zIndex,\r\n    ...createFlexStyles(props),\r\n    ...createShadowStyles(props, theme),\r\n    ...createBorderWidthStyles(props),\r\n    ...createSpacingStyles(props, theme.spacing),\r\n    ...createBorderColorStyles(props, theme.colors),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n  };\r\n\r\n  computedStyle.image = {\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n  };\r\n\r\n  computedStyle.triangle = {\r\n    width: 0,\r\n    height: 0,\r\n    left: state.left + state.buttonWidth / 2 - 8,\r\n    top: state.invert ? state.menuHeight - 1 : 1,\r\n    borderStyle: 'solid',\r\n    borderLeftWidth: 8,\r\n    borderRightWidth: 8,\r\n    borderBottomWidth: 10,\r\n    borderLeftColor: 'transparent',\r\n    borderRightColor: 'transparent',\r\n    opacity: props.opacity,\r\n    zIndex: props.zIndex,\r\n    borderBottomColor: getThemeColor(theme.colors, props.bg),\r\n  };\r\n\r\n  computedStyle.text = {\r\n    fontWeight: props.fontWeight,\r\n    textDecorationLine: props.textDecorLine,\r\n    textDecorationStyle: props.textDecorStyle,\r\n    letterSpacing: props.letterSpacing,\r\n    fontStyle: props.fontStyle,\r\n    textAlignVertical: props.textAlignVertical,\r\n    lineHeight: props.lineHeight,\r\n    textAlign: props.textAlign,\r\n    textTransform: props.textTransform,\r\n    fontSize: getThemeProperty(theme.fontSize, props.fontSize),\r\n    color: getThemeColor(theme.colors, props.color),\r\n  };\r\n\r\n  // merging style props to computed style\r\n  if (props.style) {\r\n    computedStyle.container = {\r\n      ...computedStyle.container,\r\n      // @ts-ignore\r\n      ...props.style,\r\n    };\r\n  }\r\n\r\n  return StyleSheet.create(computedStyle);\r\n};\r\n"]}