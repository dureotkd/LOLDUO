{"version":3,"sources":["mention.component.tsx"],"names":["MentionBase","textInputHeight","isTrackingStarted","setState","onHide","props","lastKeyword","triggerCallback","val","trigger","triggerLocation","boundary","pattern","RegExp","keywordArray","match","length","updateSuggestions","state","children","onChangeText","lastChar","substr","wordBoundry","previousChar","trim","startTracking","stopTracking","identifyKeyword","m","mt","mr","mb","ml","p","pr","pt","pb","pl","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","rounded","roundedTop","roundedRight","roundedBottom","roundedLeft","renderItem","loading","data","rest","theme","computedStyle","flex","list","rowData","React","cloneElement","Component","Mention","bg","horizontal","shadow","shadowColor","keyboardShouldPersistTaps","position","bottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { View, FlatList, ActivityIndicator } from 'react-native';\r\n\r\nimport { MentionProps } from './mention.type';\r\nimport { getStyle } from './mention.style';\r\nimport { ThemeContext } from '../../theme';\r\nimport { withDefaultProps } from '../../utilities/withDefaultProps';\r\nimport { DefaultProps } from '../../types';\r\n\r\nclass MentionBase extends React.Component<\r\n  MentionProps & DefaultProps<MentionProps>\r\n> {\r\n  previousChar = ' ';\r\n\r\n  isTrackingStarted = false;\r\n\r\n  state = {\r\n    textInputHeight: '',\r\n    isTrackingStarted: false,\r\n  };\r\n\r\n  startTracking = () => {\r\n    this.isTrackingStarted = true;\r\n    this.setState({\r\n      isTrackingStarted: true,\r\n    });\r\n  };\r\n\r\n  stopTracking = () => {\r\n    const { onHide } = this.props;\r\n\r\n    this.isTrackingStarted = false;\r\n    this.setState({\r\n      isTrackingStarted: false,\r\n    });\r\n\r\n    if (onHide) {\r\n      onHide();\r\n    }\r\n  };\r\n\r\n  updateSuggestions = (lastKeyword: string) => {\r\n    const { triggerCallback } = this.props;\r\n\r\n    triggerCallback(lastKeyword);\r\n  };\r\n\r\n  identifyKeyword = (val: string) => {\r\n    const { trigger, triggerLocation } = this.props;\r\n\r\n    if (this.isTrackingStarted) {\r\n      const boundary = triggerLocation === 'new-word-only' ? 'B' : '';\r\n      const pattern = new RegExp(\r\n        `\\\\${boundary}${trigger}[a-z0-9_-]+|\\\\${boundary}${trigger}`,\r\n        'gi'\r\n      );\r\n      const keywordArray = val.match(pattern);\r\n      if (keywordArray && !!keywordArray.length) {\r\n        const lastKeyword = keywordArray[keywordArray.length - 1];\r\n\r\n        this.updateSuggestions(lastKeyword);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * on change text\r\n   */\r\n  onChangeText = (val: string) => {\r\n    const { isTrackingStarted } = this.state;\r\n    const { children, triggerLocation, trigger } = this.props;\r\n\r\n    if (children.props.onChangeText) {\r\n      children.props.onChangeText(val);\r\n    }\r\n\r\n    const lastChar = val.substr(val.length - 1);\r\n    const wordBoundry =\r\n      triggerLocation === 'new-word-only'\r\n        ? this.previousChar.trim().length === 0\r\n        : true;\r\n    if (lastChar === trigger && wordBoundry) {\r\n      this.startTracking();\r\n    } else if ((lastChar === ' ' && isTrackingStarted) || val === '') {\r\n      this.stopTracking();\r\n    }\r\n    this.previousChar = lastChar;\r\n    this.identifyKeyword(val);\r\n  };\r\n\r\n  resetTextbox = () => {\r\n    this.previousChar = ' ';\r\n    this.stopTracking();\r\n  };\r\n\r\n  render() {\r\n    const { isTrackingStarted } = this.state;\r\n\r\n    const {\r\n      m,\r\n      mt,\r\n      mr,\r\n      mb,\r\n      ml,\r\n      p,\r\n      pr,\r\n      pt,\r\n      pb,\r\n      pl,\r\n      borderColor,\r\n      borderBottomColor,\r\n      borderLeftColor,\r\n      borderTopColor,\r\n      borderRightColor,\r\n      borderWidth,\r\n      borderLeftWidth,\r\n      borderRightWidth,\r\n      borderBottomWidth,\r\n      borderTopWidth,\r\n      rounded,\r\n      roundedTop,\r\n      roundedRight,\r\n      roundedBottom,\r\n      roundedLeft,\r\n      children,\r\n      renderItem,\r\n      loading,\r\n      data,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {({ theme }) => {\r\n          const computedStyle = getStyle(theme, this.props);\r\n\r\n          return (\r\n            <View style={{ flex: 1 }}>\r\n              <>\r\n                {(data ?? []).length > 0 &&\r\n                  isTrackingStarted &&\r\n                  loading === false && (\r\n                    <FlatList\r\n                      data={data}\r\n                      showsVerticalScrollIndicator\r\n                      style={computedStyle.list}\r\n                      {...rest}\r\n                      renderItem={(rowData) => renderItem(rowData)}\r\n                    />\r\n                  )}\r\n                {loading && (\r\n                  <View style={computedStyle.loading}>\r\n                    <ActivityIndicator />\r\n                  </View>\r\n                )}\r\n              </>\r\n\r\n              <View>\r\n                {React.cloneElement(children, {\r\n                  onChangeText: this.onChangeText,\r\n                })}\r\n              </View>\r\n            </View>\r\n          );\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst Mention = withDefaultProps(MentionBase, 'Mention', {\r\n  bg: 'white',\r\n  rounded: 'md',\r\n  borderColor: 'gray200',\r\n  borderWidth: 1,\r\n  horizontal: false,\r\n  loading: false,\r\n  shadow: 1,\r\n  shadowColor: 'gray900',\r\n  keyboardShouldPersistTaps: 'always',\r\n  trigger: '@',\r\n  position: 'absolute',\r\n  bottom: 0,\r\n  onHide: () => {},\r\n});\r\n\r\nexport { Mention };\r\n"]}