{"version":3,"sources":["tooltip.component.tsx"],"names":["STATES","HIDDEN","ANIMATING","SHOWN","EASING","Easing","bezier","SCREEN_INDENT","Tooltip","React","forwardRef","incomingProps","ref","props","animationDuration","bg","color","p","rounded","mx","minW","zIndex","fontSize","useNativeDriver","container","visible","top","left","menuWidth","menuHeight","buttonWidth","buttonHeight","marginAnimation","Animated","Value","opacityAnimation","state","setState","windowHeight","WINDOW_HEIGHT","StatusBar","currentHeight","invert","shadowMenuContainerStyle","opacity","marginTop","text","style","children","rest","animationStarted","modalVisible","theme","computedStyle","onDismiss","show","current","measureInWindow","parallel","timing","toValue","duration","easing","start","hide","StyleSheet","absoluteFill","styles","shadowMenuContainer","triangle","create","position","backgroundColor","borderRadius","width","menuContainer","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useRef, useImperativeHandle } from 'react';\r\nimport {\r\n  View,\r\n  Modal,\r\n  Easing,\r\n  Animated,\r\n  StatusBar,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n} from 'react-native';\r\n\r\nimport { getStyle } from './tooltip.style';\r\nimport { useTheme } from '../../theme';\r\nimport { Text } from '../text/text.component';\r\nimport { Triangle } from './triangle.component';\r\nimport { TooltipProps, TooltipRef } from './tooltip.type';\r\nimport { useStateCallback, WINDOW_HEIGHT } from '../../utilities';\r\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\r\n\r\nconst STATES = {\r\n  HIDDEN: 'HIDDEN',\r\n  ANIMATING: 'ANIMATING',\r\n  SHOWN: 'SHOWN',\r\n};\r\n\r\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\r\nconst SCREEN_INDENT = 8;\r\n\r\nconst Tooltip = React.forwardRef<\r\n  TooltipRef,\r\n  React.PropsWithChildren<TooltipProps>\r\n>((incomingProps, ref) => {\r\n  const props = useDefaultProps('Tooltip', incomingProps, {\r\n    animationDuration: 300,\r\n    bg: 'gray900',\r\n    color: 'white',\r\n    p: 'md',\r\n    rounded: 'xl',\r\n    mx: 'lg',\r\n    minW: 50,\r\n    zIndex: 1,\r\n    fontSize: 'md',\r\n    useNativeDriver: false,\r\n  });\r\n\r\n  const container = useRef<View>(null);\r\n  const [state, setState] = useStateCallback({\r\n    visible: STATES.HIDDEN,\r\n    top: 0,\r\n    left: 0,\r\n    menuWidth: 0,\r\n    menuHeight: 0,\r\n    buttonWidth: 0,\r\n    buttonHeight: 0,\r\n    marginAnimation: new Animated.Value(-8),\r\n    opacityAnimation: new Animated.Value(0),\r\n  });\r\n  const {\r\n    visible,\r\n    menuHeight,\r\n    buttonHeight,\r\n    opacityAnimation,\r\n    marginAnimation,\r\n  } = state;\r\n  let { top } = state;\r\n  const windowHeight = WINDOW_HEIGHT - (StatusBar.currentHeight ?? 0);\r\n  let invert = false;\r\n  if (top + menuHeight + buttonHeight + SCREEN_INDENT > windowHeight) {\r\n    top = top - menuHeight - SCREEN_INDENT;\r\n    invert = true;\r\n  } else if (top < SCREEN_INDENT) {\r\n    top = SCREEN_INDENT + buttonHeight;\r\n  } else {\r\n    top = top + buttonHeight + SCREEN_INDENT;\r\n    invert = false;\r\n  }\r\n  const shadowMenuContainerStyle = {\r\n    opacity: opacityAnimation,\r\n    top,\r\n    marginTop: marginAnimation,\r\n  };\r\n  const {\r\n    text,\r\n    style,\r\n    children,\r\n    bg,\r\n    animationDuration,\r\n    useNativeDriver,\r\n    ...rest\r\n  } = props;\r\n  const animationStarted = visible === STATES.ANIMATING;\r\n  const modalVisible = visible === STATES.SHOWN || animationStarted;\r\n  const { theme } = useTheme();\r\n  const computedStyle = getStyle(theme, props, {\r\n    ...state,\r\n    invert,\r\n  });\r\n\r\n  /**\r\n   * on dismissal of tooltip\r\n   *\r\n   * TODO: add onDismiss event\r\n   */\r\n  const onDismiss = () => {};\r\n\r\n  /**\r\n   * shows the tooltip\r\n   */\r\n  const show = () => {\r\n    if (container.current) {\r\n      container.current.measureInWindow(\r\n        (left: any, top: any, buttonWidth: any, buttonHeight: any) => {\r\n          setState(\r\n            {\r\n              ...state,\r\n              buttonHeight,\r\n              buttonWidth,\r\n              left,\r\n              visible: STATES.SHOWN,\r\n              top,\r\n            },\r\n            () => {\r\n              Animated.parallel([\r\n                Animated.timing(state.marginAnimation, {\r\n                  toValue: 0,\r\n                  duration: animationDuration,\r\n                  easing: EASING,\r\n                  useNativeDriver: useNativeDriver!,\r\n                }),\r\n                Animated.timing(state.opacityAnimation, {\r\n                  toValue: 1,\r\n                  duration: animationDuration,\r\n                  easing: EASING,\r\n                  useNativeDriver: useNativeDriver!,\r\n                }),\r\n              ]).start();\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * hides the tooltip\r\n   *\r\n   * @param onHidden\r\n   */\r\n  const hide = () => {\r\n    Animated.timing(state.opacityAnimation, {\r\n      toValue: 0,\r\n      duration: animationDuration,\r\n      easing: EASING,\r\n      useNativeDriver: useNativeDriver!,\r\n    }).start(() => {\r\n      setState({\r\n        ...state,\r\n        visible: STATES.HIDDEN,\r\n        marginAnimation: new Animated.Value(-8),\r\n        opacityAnimation: new Animated.Value(0),\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * exposing functions to parent\r\n   */\r\n  useImperativeHandle(ref, () => ({\r\n    show() {\r\n      show();\r\n    },\r\n    hide() {\r\n      hide();\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <View ref={container} onLayout={() => null}>\r\n      <View>{children}</View>\r\n      <Modal\r\n        visible={modalVisible}\r\n        onRequestClose={hide}\r\n        supportedOrientations={[\r\n          'portrait',\r\n          'portrait-upside-down',\r\n          'landscape',\r\n          'landscape-left',\r\n          'landscape-right',\r\n        ]}\r\n        transparent\r\n        onDismiss={onDismiss}\r\n      >\r\n        <TouchableWithoutFeedback onPress={hide} accessible={false}>\r\n          <View style={StyleSheet.absoluteFill}>\r\n            <Animated.View\r\n              style={[\r\n                styles.shadowMenuContainer,\r\n                shadowMenuContainerStyle,\r\n                style,\r\n              ]}\r\n            >\r\n              <Triangle invert={invert} style={computedStyle.triangle} />\r\n              <Animated.View style={computedStyle.container}>\r\n                {typeof text === 'string' ? (\r\n                  <Text {...rest}>{text}</Text>\r\n                ) : (\r\n                  text\r\n                )}\r\n              </Animated.View>\r\n            </Animated.View>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      </Modal>\r\n    </View>\r\n  );\r\n});\r\n\r\n// Tooltip.defaultProps = {\r\n//   animationDuration: 300,\r\n//   bg: 'gray900',\r\n//   color: 'white',\r\n//   p: 'md',\r\n//   rounded: 'xl',\r\n//   mx: 'lg',\r\n//   minW: 50,\r\n//   zIndex: 1,\r\n//   fontSize: 'md',\r\n//   useNativeDriver: false,\r\n// };\r\n\r\nconst styles = StyleSheet.create({\r\n  shadowMenuContainer: {\r\n    position: 'absolute',\r\n    backgroundColor: 'transparent',\r\n    borderRadius: 4,\r\n    opacity: 0,\r\n    width: '100%',\r\n  },\r\n  menuContainer: {\r\n    overflow: 'hidden',\r\n  },\r\n});\r\n\r\nexport { Tooltip };\r\n"]}