{"version":3,"sources":["avatar.style.tsx"],"names":["getStyle","theme","props","computedStyle","container","backgroundColor","colors","bg","alignItems","justifyContent","width","size","height","alignSelf","zIndex","opacity","spacing","borderRadius","row","flexDirection","text","color","fontSize","textAlignVertical","textAlign","image","style","StyleSheet","create"],"mappings":"+QAAA,yCAGA,gD,yyBAkBO,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAmBC,KAAnB,CAA0C,CAChE,GAAMC,CAAAA,aAAkB,CAAG,EAA3B,CAEAA,aAAa,CAACC,SAAd,sFACEC,eAAe,CAAE,yBAAcJ,KAAK,CAACK,MAApB,CAA4BJ,KAAK,CAACK,EAAlC,CADnB,CAEEC,UAAU,CAAE,QAFd,CAGEC,cAAc,CAAE,QAHlB,CAIEC,KAAK,CAAER,KAAK,CAACS,IAJf,CAKEC,MAAM,CAAEV,KAAK,CAACS,IALhB,CAMEE,SAAS,CAAEX,KAAK,CAACW,SANnB,CAOEC,MAAM,CAAEZ,KAAK,CAACY,MAPhB,CAQEC,OAAO,CAAEb,KAAK,CAACa,OARjB,EASK,+BAAoBb,KAApB,CATL,EAUK,mCAAwBA,KAAxB,CAVL,EAWK,8BAAmBA,KAAnB,CAA0BD,KAA1B,CAXL,EAYK,+BAAoBC,KAApB,CAA2BD,KAAK,CAACe,OAAjC,CAZL,EAaK,mCAAwBd,KAAxB,CAA+BD,KAAK,CAACK,MAArC,CAbL,EAcK,oCAAyBJ,KAAzB,CAAgCD,KAAK,CAACgB,YAAtC,CAdL,EAiBAd,aAAa,CAACe,GAAd,sFACEb,eAAe,CAAE,yBAAcJ,KAAK,CAACK,MAApB,CAA4BJ,KAAK,CAACK,EAAlC,CADnB,CAEEC,UAAU,CAAE,QAFd,CAGEC,cAAc,CAAE,QAHlB,CAIEU,aAAa,CAAE,KAJjB,CAKEN,SAAS,CAAEX,KAAK,CAACW,SALnB,CAMEC,MAAM,CAAEZ,KAAK,CAACY,MANhB,CAOEC,OAAO,CAAEb,KAAK,CAACa,OAPjB,EAQK,+BAAoBb,KAApB,CARL,EASK,mCAAwBA,KAAxB,CATL,EAUK,8BAAmBA,KAAnB,CAA0BD,KAA1B,CAVL,EAWK,+BAAoBC,KAApB,CAA2BD,KAAK,CAACe,OAAjC,CAXL,EAYK,mCAAwBd,KAAxB,CAA+BD,KAAK,CAACK,MAArC,CAZL,EAaK,oCAAyBJ,KAAzB,CAAgCD,KAAK,CAACgB,YAAtC,CAbL,EAgBAd,aAAa,CAACiB,IAAd,CAAqB,CACnBC,KAAK,CAAE,yBAAcpB,KAAK,CAACK,MAApB,CAA4BJ,KAAK,CAACmB,KAAlC,CADY,CAEnBC,QAAQ,CAAE,4BAAiBrB,KAAK,CAACqB,QAAvB,CAAiCpB,KAAK,CAACoB,QAAvC,CAFS,CAGnBC,iBAAiB,CAAE,QAHA,CAInBC,SAAS,CAAE,QAJQ,CAArB,CAOArB,aAAa,CAACsB,KAAd,gBACEb,MAAM,CAAEV,KAAK,CAACS,IADhB,CAEED,KAAK,CAAER,KAAK,CAACS,IAFf,EAGK,oCAAyBT,KAAzB,CAAgCD,KAAK,CAACgB,YAAtC,CAHL,EAOA,GAAIf,KAAK,CAACwB,KAAV,CAAiB,CACfvB,aAAa,CAACC,SAAd,gCACKD,aAAa,CAACC,SADnB,EAGKF,KAAK,CAACwB,KAHX,EAKD,CAED,MAAOC,yBAAWC,MAAX,CAAkBzB,aAAlB,CAAP,CACD,CA3DM,C","sourcesContent":["import { StyleSheet } from 'react-native';\r\nimport { ThemeType } from '../../theme';\r\n\r\nimport {\r\n  getThemeProperty,\r\n  createShadowStyles,\r\n  createSpacingStyles,\r\n  createBorderWidthStyles,\r\n  createBorderColorStyles,\r\n  createBorderRadiusStyles,\r\n  createPositionStyle,\r\n  getThemeColor,\r\n} from '../../theme/theme.service';\r\nimport { AvatarProps } from './avatar.type';\r\n\r\n/**\r\n * computed style\r\n *\r\n * @param theme\r\n * @param props\r\n */\r\nexport const getStyle = (theme: ThemeType, props: AvatarProps) => {\r\n  const computedStyle: any = {};\r\n\r\n  computedStyle.container = {\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: props.size,\r\n    height: props.size,\r\n    alignSelf: props.alignSelf,\r\n    zIndex: props.zIndex,\r\n    opacity: props.opacity,\r\n    ...createPositionStyle(props),\r\n    ...createBorderWidthStyles(props),\r\n    ...createShadowStyles(props, theme),\r\n    ...createSpacingStyles(props, theme.spacing),\r\n    ...createBorderColorStyles(props, theme.colors),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n  };\r\n\r\n  computedStyle.row = {\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n    alignSelf: props.alignSelf,\r\n    zIndex: props.zIndex,\r\n    opacity: props.opacity,\r\n    ...createPositionStyle(props),\r\n    ...createBorderWidthStyles(props),\r\n    ...createShadowStyles(props, theme),\r\n    ...createSpacingStyles(props, theme.spacing),\r\n    ...createBorderColorStyles(props, theme.colors),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n  };\r\n\r\n  computedStyle.text = {\r\n    color: getThemeColor(theme.colors, props.color),\r\n    fontSize: getThemeProperty(theme.fontSize, props.fontSize),\r\n    textAlignVertical: 'center',\r\n    textAlign: 'center',\r\n  };\r\n\r\n  computedStyle.image = {\r\n    height: props.size,\r\n    width: props.size,\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n  };\r\n\r\n  // merging style props to computed style\r\n  if (props.style) {\r\n    computedStyle.container = {\r\n      ...computedStyle.container,\r\n      // @ts-ignore\r\n      ...props.style,\r\n    };\r\n  }\r\n\r\n  return StyleSheet.create(computedStyle);\r\n};\r\n"]}