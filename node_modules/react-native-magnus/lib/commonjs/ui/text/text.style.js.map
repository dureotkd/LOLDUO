{"version":3,"sources":["text.style.tsx"],"names":["getStyle","theme","props","computedStyle","text","height","h","width","w","minHeight","minH","minWidth","minW","maxHeight","maxH","maxWidth","maxW","flex","backgroundColor","colors","bg","overflow","opacity","textDecorationLine","textDecorLine","textDecorationStyle","textDecorStyle","letterSpacing","fontStyle","textAlignVertical","lineHeight","color","fontSize","textAlign","textTransform","textDecorationColor","textDecorColor","textShadowColor","textShadowOffset","shadow","textShadowRadius","borderRadius","fontWeight","fontFamily","spacing","style","StyleSheet","create"],"mappings":"+QAAA,yCAGA,gD,yyBAkBO,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAmBC,KAAnB,CAAwC,uBAC9D,GAAMC,CAAAA,aAAkB,CAAG,EAA3B,CAEAA,aAAa,CAACC,IAAd,0DACEC,MAAM,CAAEH,KAAK,CAACI,CADhB,CAEEC,KAAK,CAAEL,KAAK,CAACM,CAFf,CAGEC,SAAS,CAAEP,KAAK,CAACQ,IAHnB,CAIEC,QAAQ,CAAET,KAAK,CAACU,IAJlB,CAKEC,SAAS,CAAEX,KAAK,CAACY,IALnB,CAMEC,QAAQ,CAAEb,KAAK,CAACc,IANlB,CAOEC,IAAI,CAAEf,KAAK,CAACe,IAPd,CAQEC,eAAe,CAAE,yBAAcjB,KAAK,CAACkB,MAApB,CAA4BjB,KAAK,CAACkB,EAAlC,CARnB,CASEC,QAAQ,CAAEnB,KAAK,CAACmB,QATlB,CAUEC,OAAO,CAAEpB,KAAK,CAACoB,OAVjB,CAYEC,kBAAkB,CAAErB,KAAK,CAACsB,aAZ5B,CAaEC,mBAAmB,CAAEvB,KAAK,CAACwB,cAb7B,CAcEC,aAAa,CAAEzB,KAAK,CAACyB,aAdvB,CAeEC,SAAS,CAAE1B,KAAK,CAAC0B,SAfnB,CAgBEC,iBAAiB,CAAE3B,KAAK,CAAC2B,iBAhB3B,CAiBEC,UAAU,CAAE5B,KAAK,CAAC4B,UAjBpB,CAkBEC,KAAK,CAAE,yBAAc9B,KAAK,CAACkB,MAApB,CAA4BjB,KAAK,CAAC6B,KAAlC,CAlBT,CAmBEC,QAAQ,CAAE,4BAAiB/B,KAAK,CAAC+B,QAAvB,CAAiC9B,KAAK,CAAC8B,QAAvC,CAnBZ,CAoBEC,SAAS,CAAE/B,KAAK,CAAC+B,SApBnB,CAqBEC,aAAa,CAAEhC,KAAK,CAACgC,aArBvB,CAsBEC,mBAAmB,CAAE,yBAAclC,KAAK,CAACkB,MAApB,CAA4BjB,KAAK,CAACkC,cAAlC,CAtBvB,CAuBEC,eAAe,CAAE,yBAAcpC,KAAK,CAACkB,MAApB,CAA4BjB,KAAK,CAACmC,eAAlC,CAvBnB,CAwBEC,gBAAgB,CAAE,CAChB/B,KAAK,CAAE,4BAAiBN,KAAK,CAACsC,MAAvB,CAA+BrC,KAAK,CAACoC,gBAArC,CADS,CAEhBjC,MAAM,CAAE,4BAAiBJ,KAAK,CAACsC,MAAvB,CAA+BrC,KAAK,CAACoC,gBAArC,CAFQ,CAxBpB,CA4BEE,gBAAgB,CAAE,4BAChBvC,KAAK,CAACwC,YADU,CAEhBvC,KAAK,CAACsC,gBAFU,CA5BpB,CAiCEE,UAAU,CAAE,yBACVzC,KAAK,CAAC0C,UADI,CAEVzC,KAAK,CAACyC,UAFI,CAGVzC,KAAK,CAACwC,UAHI,CAjCd,CAuCEC,UAAU,oBACRzC,KAAK,CAACyC,UADE,uDAER,8BAAmB1C,KAAK,CAAC0C,UAAzB,CAAqCzC,KAAK,CAACwC,UAA3C,CAzCJ,EA2CK,mCAAwBxC,KAAxB,CA3CL,EA4CK,+BAAoBA,KAApB,CAA2BD,KAAK,CAAC2C,OAAjC,CA5CL,EA6CK,mCAAwB1C,KAAxB,CAA+BD,KAAK,CAACkB,MAArC,CA7CL,EA8CK,oCAAyBjB,KAAzB,CAAgCD,KAAK,CAACwC,YAAtC,CA9CL,EAkDA,GAAIvC,KAAK,CAAC2C,KAAV,CAAiB,CACf1C,aAAa,CAACC,IAAd,gCACKD,aAAa,CAACC,IADnB,EAGKF,KAAK,CAAC2C,KAHX,EAKD,CAED,MAAOC,yBAAWC,MAAX,CAAkB5C,aAAlB,CAAP,CACD,CA9DM,C","sourcesContent":["import { StyleSheet } from 'react-native';\r\nimport { ThemeType } from '../../theme';\r\n\r\nimport {\r\n  getThemeProperty,\r\n  createSpacingStyles,\r\n  createBorderWidthStyles,\r\n  createBorderColorStyles,\r\n  createBorderRadiusStyles,\r\n  getThemeFontFamily,\r\n  getFontWeight,\r\n  getThemeColor,\r\n} from '../../theme/theme.service';\r\nimport { TextProps } from './text.type';\r\n\r\n/**\r\n * computed style\r\n *\r\n * @param theme\r\n * @param props\r\n */\r\nexport const getStyle = (theme: ThemeType, props: TextProps) => {\r\n  const computedStyle: any = {};\r\n\r\n  computedStyle.text = {\r\n    height: props.h,\r\n    width: props.w,\r\n    minHeight: props.minH,\r\n    minWidth: props.minW,\r\n    maxHeight: props.maxH,\r\n    maxWidth: props.maxW,\r\n    flex: props.flex,\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n    overflow: props.overflow,\r\n    opacity: props.opacity,\r\n\r\n    textDecorationLine: props.textDecorLine,\r\n    textDecorationStyle: props.textDecorStyle,\r\n    letterSpacing: props.letterSpacing,\r\n    fontStyle: props.fontStyle,\r\n    textAlignVertical: props.textAlignVertical,\r\n    lineHeight: props.lineHeight,\r\n    color: getThemeColor(theme.colors, props.color),\r\n    fontSize: getThemeProperty(theme.fontSize, props.fontSize),\r\n    textAlign: props.textAlign,\r\n    textTransform: props.textTransform,\r\n    textDecorationColor: getThemeColor(theme.colors, props.textDecorColor),\r\n    textShadowColor: getThemeColor(theme.colors, props.textShadowColor),\r\n    textShadowOffset: {\r\n      width: getThemeProperty(theme.shadow, props.textShadowOffset),\r\n      height: getThemeProperty(theme.shadow, props.textShadowOffset),\r\n    },\r\n    textShadowRadius: getThemeProperty(\r\n      theme.borderRadius,\r\n      props.textShadowRadius\r\n    ),\r\n\r\n    fontWeight: getFontWeight(\r\n      theme.fontFamily,\r\n      props.fontFamily,\r\n      props.fontWeight\r\n    ),\r\n\r\n    fontFamily:\r\n      props.fontFamily ??\r\n      getThemeFontFamily(theme.fontFamily, props.fontWeight),\r\n\r\n    ...createBorderWidthStyles(props),\r\n    ...createSpacingStyles(props, theme.spacing),\r\n    ...createBorderColorStyles(props, theme.colors),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n  };\r\n\r\n  // merging style props to computed style\r\n  if (props.style) {\r\n    computedStyle.text = {\r\n      ...computedStyle.text,\r\n      // @ts-ignore\r\n      ...props.style,\r\n    };\r\n  }\r\n\r\n  return StyleSheet.create(computedStyle);\r\n};\r\n"]}