{"version":3,"sources":["text.component.tsx"],"names":["Text","incomingProps","props","color","textAlign","textTransform","fontSize","overflow","textAlignVertical","w","h","bg","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","flex","minH","minW","children","fontWeight","lineHeight","letterSpacing","textDecorColor","textDecorStyle","fontStyle","textDecorLine","opacity","zIndex","style","rest","theme","computedStyle","text"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Text as RNText } from 'react-native';\r\n\r\nimport { TextProps } from './text.type';\r\nimport { getStyle } from './text.style';\r\nimport { useTheme } from '../../theme';\r\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\r\n\r\nconst Text: React.FunctionComponent<TextProps> = (incomingProps) => {\r\n  const props = useDefaultProps('Text', incomingProps, {\r\n    color: 'gray900',\r\n    textAlign: 'auto',\r\n    textTransform: 'none',\r\n    fontSize: 'md',\r\n    overflow: 'hidden',\r\n    textAlignVertical: 'center',\r\n  });\r\n\r\n  const {\r\n    w,\r\n    h,\r\n    bg,\r\n    m,\r\n    mt,\r\n    mr,\r\n    mb,\r\n    ml,\r\n    ms,\r\n    p,\r\n    pr,\r\n    pt,\r\n    pb,\r\n    pl,\r\n    flex,\r\n    minH,\r\n    minW,\r\n    color,\r\n    fontSize,\r\n    children,\r\n    textAlign,\r\n    fontWeight,\r\n    lineHeight,\r\n    letterSpacing,\r\n    textTransform,\r\n    textDecorColor,\r\n    textDecorStyle,\r\n    fontStyle,\r\n    textDecorLine,\r\n    textAlignVertical,\r\n    overflow,\r\n    opacity,\r\n    zIndex,\r\n    style,\r\n    ...rest\r\n  } = props;\r\n  const { theme } = useTheme();\r\n  const computedStyle = getStyle(theme, props);\r\n\r\n  return (\r\n    <RNText style={computedStyle.text} {...rest}>\r\n      {children}\r\n    </RNText>\r\n  );\r\n};\r\n\r\n// Text.defaultProps = {\r\n//   color: 'gray900',\r\n//   textAlign: 'auto',\r\n//   textTransform: 'none',\r\n//   fontSize: 'md',\r\n//   overflow: 'hidden',\r\n// };\r\n\r\nexport { Text };\r\n"]}