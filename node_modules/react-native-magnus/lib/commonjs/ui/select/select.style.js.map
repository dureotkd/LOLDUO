{"version":3,"sources":["select.style.tsx"],"names":["getStyle","theme","props","computedStyle","wrapper","backgroundColor","colors","bg","borderRadius","height","WINDOW_HEIGHT","overflow","indicator","alignSelf","marginVertical","container","flex","spacing","h","style","StyleSheet","create"],"mappings":"+QAAA,yCAGA,gDAOA,0C,yyBASO,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAmBC,KAAnB,CAA0C,CAChE,GAAMC,CAAAA,aAAkB,CAAG,EAA3B,CAEAA,aAAa,CAACC,OAAd,0DACEC,eAAe,CAAE,yBAAcJ,KAAK,CAACK,MAApB,CAA4BJ,KAAK,CAACK,EAAlC,CADnB,EAEK,mCAAwBL,KAAxB,CAFL,EAGK,mCAAwBA,KAAxB,CAA+BD,KAAK,CAACK,MAArC,CAHL,EAIK,oCAAyBJ,KAAzB,CAAgCD,KAAK,CAACO,YAAtC,CAJL,MAKEC,MAAM,CAAEC,yBAAgB,GAL1B,CAMEC,QAAQ,CAAE,QANZ,GASAR,aAAa,CAACS,SAAd,CAA0B,CACxBC,SAAS,CAAE,QADa,CAExBC,cAAc,CAAE,EAFQ,CAA1B,CAKAX,aAAa,CAACY,SAAd,gBACEC,IAAI,CAAE,CADR,EAEK,+BAAoBd,KAApB,CAA2BD,KAAK,CAACgB,OAAjC,CAFL,EAKA,GAAIf,KAAK,CAACgB,CAAV,CAAa,CACXf,aAAa,CAACY,SAAd,gCACKZ,aAAa,CAACY,SADnB,MAEEN,MAAM,CAAEP,KAAK,CAACgB,CAFhB,GAID,CAGD,GAAIhB,KAAK,CAACiB,KAAV,CAAiB,CACfhB,aAAa,CAACY,SAAd,gCACKZ,aAAa,CAACY,SADnB,EAGKb,KAAK,CAACiB,KAHX,EAKD,CACD,MAAOC,yBAAWC,MAAX,CAAkBlB,aAAlB,CAAP,CACD,CAtCM,C","sourcesContent":["import { StyleSheet } from 'react-native';\r\nimport { ThemeType } from '../../theme';\r\n\r\nimport {\r\n  createSpacingStyles,\r\n  createBorderRadiusStyles,\r\n  createBorderColorStyles,\r\n  createBorderWidthStyles,\r\n  getThemeColor,\r\n} from '../../theme/theme.service';\r\nimport { WINDOW_HEIGHT } from '../../utilities';\r\nimport { SelectProps } from './select.type';\r\n\r\n/**\r\n * computed style\r\n *\r\n * @param theme\r\n * @param props\r\n */\r\nexport const getStyle = (theme: ThemeType, props: SelectProps) => {\r\n  const computedStyle: any = {};\r\n\r\n  computedStyle.wrapper = {\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n    ...createBorderWidthStyles(props),\r\n    ...createBorderColorStyles(props, theme.colors),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n    height: WINDOW_HEIGHT * 0.7,\r\n    overflow: 'hidden',\r\n  };\r\n\r\n  computedStyle.indicator = {\r\n    alignSelf: 'center',\r\n    marginVertical: 10,\r\n  };\r\n\r\n  computedStyle.container = {\r\n    flex: 1,\r\n    ...createSpacingStyles(props, theme.spacing),\r\n  };\r\n\r\n  if (props.h) {\r\n    computedStyle.container = {\r\n      ...computedStyle.container,\r\n      height: props.h,\r\n    };\r\n  }\r\n\r\n  // merging style props to computed style\r\n  if (props.style) {\r\n    computedStyle.container = {\r\n      ...computedStyle.container,\r\n      // @ts-ignore\r\n      ...props.style,\r\n    };\r\n  }\r\n  return StyleSheet.create(computedStyle);\r\n};\r\n"]}