{"version":3,"sources":["select.component.tsx"],"names":["Select","React","forwardRef","incomingProps","ref","props","bg","rounded","flexDir","isVisible","renderNoResultsView","searchTerm","keyExtractor","_","index","value","title","message","footer","data","multiple","renderItem","renderSubmitButton","renderSearchInput","searchableProps","onSelectProp","onSelect","theme","visible","setVisible","selectedValue","setSelectedValue","setSearchTerm","isSearchable","length","computedStyle","resolveMultiLevelAccess","obj","key","split","reduce","cur","keySection","undefined","console","warn","filteredData","Array","isArray","filter","item","lowSearch","toLowerCase","String","includes","some","clearSearchInput","close","open","finalValue","copy","slice","indexOf","splice","push","renderTitle","renderMessage","renderSearchbar","searchInputElement","clearText","mandatoryProps","onChangeText","text","autoCompleteType","cloneElement","renderFooter","submitButtonElement","onPress","renderNoResultsFound","margin","justifyContent","wrapper","container","Option","SelectOption"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport RNModal from 'react-native-modal';\r\nimport { SafeAreaView, FlatList } from 'react-native';\r\nimport { useState, useImperativeHandle, useEffect, useMemo } from 'react';\r\n\r\nimport { getStyle } from './select.style';\r\nimport { Div } from '../div/div.component';\r\nimport { useTheme } from '../../theme';\r\nimport { Text } from '../text/text.component';\r\nimport { Input } from '../input/input.component';\r\nimport { Icon } from '../icon/icon.component';\r\nimport { SelectOption } from './select.option.component';\r\nimport { Button } from '../button/button.component';\r\nimport { SelectProps, SelectRef, CompoundedSelect } from './select.type';\r\nimport { InputProps } from '../input/input.type';\r\nimport { ButtonProps } from '../button/button.type';\r\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\r\n\r\nconst Select = React.forwardRef<SelectRef, SelectProps>(\r\n  (incomingProps, ref) => {\r\n    const props = useDefaultProps('Select', incomingProps, {\r\n      bg: 'white',\r\n      rounded: 'none',\r\n      flexDir: 'column',\r\n      isVisible: false,\r\n      renderNoResultsView: (searchTerm) => (\r\n        <Div flex={1} px=\"2xl\" py=\"xl\">\r\n          <Text fontSize=\"lg\">No results found for \"{searchTerm}\"</Text>\r\n        </Div>\r\n      ),\r\n      keyExtractor: (_, index) => `${index}`,\r\n    });\r\n\r\n    const {\r\n      value,\r\n      title,\r\n      message,\r\n      footer,\r\n      data,\r\n      multiple,\r\n      renderItem,\r\n      keyExtractor,\r\n      renderNoResultsView,\r\n      renderSubmitButton,\r\n      renderSearchInput,\r\n      searchableProps,\r\n      onSelect: onSelectProp,\r\n    } = props;\r\n    const { theme } = useTheme();\r\n    const [visible, setVisible] = useState(props.isVisible || false);\r\n    const [selectedValue, setSelectedValue] = useState(value);\r\n    const [searchTerm, setSearchTerm] = useState<string>('');\r\n    const isSearchable = useMemo(() => !!searchableProps?.length, [\r\n      searchableProps,\r\n    ]);\r\n\r\n    const computedStyle = getStyle(theme, props);\r\n\r\n    const resolveMultiLevelAccess = (obj: any, key: string) => {\r\n      return key.split('.').reduce((cur: any, keySection: string) => {\r\n        if (cur === null || cur === undefined) {\r\n          return;\r\n        }\r\n\r\n        if (cur[keySection] === null || cur[keySection] === undefined) {\r\n          console.warn(`Property \"${key}\" does not exists! `);\r\n          return;\r\n        }\r\n\r\n        return cur[keySection];\r\n      }, obj);\r\n    };\r\n\r\n    const filteredData = useMemo(() => {\r\n      if (\r\n        !searchableProps ||\r\n        (Array.isArray(searchableProps) && !searchableProps.length)\r\n      ) {\r\n        return data;\r\n      }\r\n\r\n      return data.filter((item) => {\r\n        const lowSearch = searchTerm.toLowerCase();\r\n\r\n        if (!Array.isArray(searchableProps)) {\r\n          return String(item).toLowerCase().includes(lowSearch);\r\n        }\r\n\r\n        return searchableProps.some((key: string) =>\r\n          String(resolveMultiLevelAccess(item, key))\r\n            .toLowerCase()\r\n            .includes(lowSearch)\r\n        );\r\n      });\r\n    }, [searchableProps, searchTerm, data]);\r\n\r\n    useEffect(() => {\r\n      if ('isVisible' in props) {\r\n        setVisible(props.isVisible || visible);\r\n      }\r\n    }, [props, visible]);\r\n\r\n    useEffect(() => {\r\n      if (visible) {\r\n        clearSearchInput();\r\n      }\r\n    }, [visible]);\r\n\r\n    /**\r\n     * exposing functions to parent\r\n     */\r\n    useImperativeHandle(ref, () => ({\r\n      close() {\r\n        setVisible(false);\r\n      },\r\n      open() {\r\n        setVisible(true);\r\n      },\r\n    }));\r\n\r\n    /**\r\n     * set values of select based if its multiple select\r\n     * or single valued select\r\n     *\r\n     * @param value\r\n     */\r\n    const onSelect = (value: any) => {\r\n      let finalValue;\r\n\r\n      if (multiple) {\r\n        const copy = selectedValue.slice();\r\n        const index = selectedValue.indexOf(value);\r\n        if (index !== -1) {\r\n          copy.splice(index, 1);\r\n        } else {\r\n          copy.push(value);\r\n        }\r\n\r\n        setSelectedValue(copy);\r\n        finalValue = copy;\r\n      } else {\r\n        setSelectedValue(value);\r\n        setVisible(false);\r\n        finalValue = value;\r\n      }\r\n\r\n      onSelectProp(finalValue);\r\n    };\r\n\r\n    /**\r\n     * render title at top select modal\r\n     */\r\n    const renderTitle = () => {\r\n      if (title) {\r\n        return typeof title === 'string' ? (\r\n          <Text\r\n            px=\"xl\"\r\n            fontSize=\"lg\"\r\n            fontWeight=\"bold\"\r\n            textTransform=\"uppercase\"\r\n          >\r\n            {title}\r\n          </Text>\r\n        ) : (\r\n          title\r\n        );\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    /**\r\n     * render message at top select modal\r\n     */\r\n    const renderMessage = () => {\r\n      if (message) {\r\n        return typeof message === 'string' ? (\r\n          <Text px=\"xl\" fontSize=\"lg\">\r\n            {message}\r\n          </Text>\r\n        ) : (\r\n          message\r\n        );\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    const clearSearchInput = () => setSearchTerm('');\r\n\r\n    /**\r\n     * render searchbar at top select modal\r\n     */\r\n    const renderSearchbar = () => {\r\n      if (!isSearchable) {\r\n        return;\r\n      }\r\n\r\n      const searchInputElement =\r\n        renderSearchInput && renderSearchInput({ clearText: clearSearchInput });\r\n\r\n      const mandatoryProps: Partial<InputProps> = {\r\n        value: searchTerm,\r\n        onChangeText: (text: string) => setSearchTerm(text),\r\n        autoCompleteType: 'off',\r\n      };\r\n\r\n      if (searchInputElement) {\r\n        return React.cloneElement(searchInputElement, mandatoryProps);\r\n      }\r\n\r\n      return (\r\n        <Input\r\n          mx=\"xl\"\r\n          mt=\"-md\"\r\n          fontSize=\"lg\"\r\n          placeholder=\"Search items\"\r\n          bg=\"gray200\"\r\n          prefix={\r\n            <Icon mr=\"lg\" name=\"search1\" color=\"gray700\" fontSize=\"3xl\" />\r\n          }\r\n          suffix={\r\n            searchTerm ? (\r\n              <Button\r\n                mx=\"-md\"\r\n                p=\"md\"\r\n                alignSelf=\"center\"\r\n                rounded=\"circle\"\r\n                bg=\"gray400\"\r\n                onPress={clearSearchInput}\r\n              >\r\n                <Icon name=\"close\" fontSize=\"xs\" color=\"gray900\" />\r\n              </Button>\r\n            ) : null\r\n          }\r\n          {...mandatoryProps}\r\n        />\r\n      );\r\n    };\r\n\r\n    const renderFooter = () => {\r\n      if (footer) {\r\n        return footer;\r\n      }\r\n\r\n      // if the component is single-valued and no footer is provided\r\n      // don't render anything in footer\r\n      if (!multiple) {\r\n        return;\r\n      }\r\n\r\n      const submitButtonElement = renderSubmitButton && renderSubmitButton();\r\n\r\n      const mandatoryProps: Partial<ButtonProps> = {\r\n        onPress: () => setVisible(false),\r\n      };\r\n\r\n      if (submitButtonElement) {\r\n        return React.cloneElement(submitButtonElement, mandatoryProps);\r\n      }\r\n\r\n      return (\r\n        <Button block rounded=\"none\" bg=\"green600\" {...mandatoryProps}>\r\n          <Text fontSize=\"xl\" py=\"xs\" color=\"white\">\r\n            Submit\r\n          </Text>\r\n        </Button>\r\n      );\r\n    };\r\n\r\n    const renderNoResultsFound = () => {\r\n      renderNoResultsView && renderNoResultsView(searchTerm);\r\n    };\r\n\r\n    return (\r\n      <RNModal\r\n        backdropTransitionOutTiming={0}\r\n        animationIn=\"slideInUp\"\r\n        isVisible={visible}\r\n        backdropColor=\"black\"\r\n        onBackdropPress={() => setVisible(false)}\r\n        onBackButtonPress={() => setVisible(false)}\r\n        hideModalContentWhileAnimating\r\n        style={{\r\n          margin: 0,\r\n          justifyContent: 'flex-end',\r\n        }}\r\n      >\r\n        <Div style={computedStyle.wrapper}>\r\n          <SafeAreaView style={computedStyle.container}>\r\n            <Div>\r\n              <Div py=\"xl\">\r\n                {renderTitle()}\r\n                {renderMessage()}\r\n              </Div>\r\n              <Div>{renderSearchbar()}</Div>\r\n            </Div>\r\n\r\n            {filteredData.length > 0 ? (\r\n              <Div flex={1}>\r\n                <FlatList\r\n                  data={filteredData}\r\n                  keyExtractor={keyExtractor}\r\n                  renderItem={({ item, index }) =>\r\n                    React.cloneElement(renderItem(item, index), {\r\n                      onSelect,\r\n                      selectedValue,\r\n                    })\r\n                  }\r\n                />\r\n              </Div>\r\n            ) : (\r\n              renderNoResultsFound()\r\n            )}\r\n\r\n            {renderFooter()}\r\n          </SafeAreaView>\r\n        </Div>\r\n      </RNModal>\r\n    );\r\n  }\r\n) as CompoundedSelect;\r\n\r\n// Select.defaultProps = {\r\n//   bg: 'white',\r\n//   rounded: 'none',\r\n//   flexDir: 'column',\r\n//   isVisible: false,\r\n//   // mb: 'xl',\r\n//   // @ts-ignore\r\n//   renderNoResultsView: (searchTerm) => (\r\n//     <Div flex={1} px=\"2xl\" py=\"xl\">\r\n//       <Text fontSize=\"lg\">No results found for \"{searchTerm}\"</Text>\r\n//     </Div>\r\n//   ),\r\n//   keyExtractor: (_, index) => `${index}`,\r\n// };\r\n\r\nSelect.Option = SelectOption;\r\n\r\nexport { Select };\r\n"]}