{"version":3,"sources":["consumer.component.tsx"],"names":["Consumer","children","manager","key","React","useRef","undefined","checkManager","Error","handleInit","current","mount","useEffect","update","unmount"],"mappings":"mLAAA,oDASO,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAiD,IAA9CC,CAAAA,QAA8C,MAA9CA,QAA8C,CAApCC,OAAoC,MAApCA,OAAoC,CACvE,GAAMC,CAAAA,GAAG,CAAGC,KAAK,CAACC,MAAN,CAAiCC,SAAjC,CAAZ,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAY,CAC/B,GAAI,CAACL,OAAL,CAAc,CACZ,KAAM,IAAIM,CAAAA,KAAJ,CAAU,2BAAV,CAAN,CACD,CACF,CAJD,CAMA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAY,CAC7BF,YAAY,GACZJ,GAAG,CAACO,OAAJ,CAAcR,OAAd,SAAcA,OAAd,iBAAcA,OAAO,CAAES,KAAT,CAAeV,QAAf,CAAd,CACD,CAHD,CAKAG,KAAK,CAACQ,SAAN,CAAgB,UAAM,CACpBL,YAAY,GACZL,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAEW,MAAT,CAAgBV,GAAG,CAACO,OAApB,CAA6BT,QAA7B,EACD,CAHD,CAGG,CAACA,QAAD,CAAWC,OAAX,CAHH,EAKAE,KAAK,CAACQ,SAAN,CAAgB,UAAM,CACpBH,UAAU,GAEV,MAAO,WAAY,CACjBF,YAAY,GACZL,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAEY,OAAT,CAAiBX,GAAG,CAACO,OAArB,EACD,CAHD,CAID,CAPD,CAOG,EAPH,EASA,MAAO,KAAP,CACD,CA7BM,C","sourcesContent":["import * as React from 'react';\r\n\r\nimport { IProvider } from './host.component';\r\n\r\ninterface IConsumerProps {\r\n  children: React.ReactNode;\r\n  manager: IProvider | null;\r\n}\r\n\r\nexport const Consumer = ({ children, manager }: IConsumerProps): null => {\r\n  const key = React.useRef<string | undefined>(undefined);\r\n\r\n  const checkManager = (): void => {\r\n    if (!manager) {\r\n      throw new Error('No portal manager defined');\r\n    }\r\n  };\r\n\r\n  const handleInit = (): void => {\r\n    checkManager();\r\n    key.current = manager?.mount(children);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    checkManager();\r\n    manager?.update(key.current, children);\r\n  }, [children, manager]);\r\n\r\n  React.useEffect(() => {\r\n    handleInit();\r\n\r\n    return (): void => {\r\n      checkManager();\r\n      manager?.unmount(key.current);\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n"]}