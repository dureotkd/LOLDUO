{"version":3,"sources":["drawer.style.tsx"],"names":["SCREEN_WIDTH","Dimensions","get","width","SCREEN_HEIGHT","height","getStyle","theme","props","computedStyle","drawer","margin","container","position","drawerPercentage","zIndex","backgroundColor","colors","bg","borderRadius","safeView","flex","direction","right","left","StyleSheet","create"],"mappings":"+QAAA,yCAGA,gD,yyBAQA,GAAMA,CAAAA,YAAY,CAAGC,wBAAWC,GAAX,CAAe,QAAf,EAAyBC,KAA9C,CACA,GAAMC,CAAAA,aAAa,CAAGH,wBAAWC,GAAX,CAAe,QAAf,EAAyBG,MAA/C,CAQO,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAmBC,KAAnB,CAA0C,CAChE,GAAMC,CAAAA,aAAkB,CAAG,EAA3B,CAEAA,aAAa,CAACC,MAAd,CAAuB,CACrBC,MAAM,CAAE,CADa,CAAvB,CAIAF,aAAa,CAACG,SAAd,4CACEC,QAAQ,CAAE,UADZ,CAEER,MAAM,CAAED,aAFV,CAIED,KAAK,CAAEH,YAAY,EAAIQ,KAAK,CAACM,gBAAN,CAAyB,GAA7B,CAJrB,CAKEC,MAAM,CAAE,CALV,CAMEJ,MAAM,CAAE,CANV,CAOEK,eAAe,CAAE,yBAAcT,KAAK,CAACU,MAApB,CAA4BT,KAAK,CAACU,EAAlC,CAPnB,EAQK,mCAAwBV,KAAxB,CARL,EASK,mCAAwBA,KAAxB,CAA+BD,KAAK,CAACU,MAArC,CATL,EAUK,oCAAyBT,KAAzB,CAAgCD,KAAK,CAACY,YAAtC,CAVL,EAaAV,aAAa,CAACW,QAAd,CAAyB,CACvBC,IAAI,CAAE,CADiB,CAAzB,CAIA,GAAIb,KAAK,CAACc,SAAN,GAAoB,OAAxB,CAAiC,CAC/Bb,aAAa,CAACG,SAAd,gCACKH,aAAa,CAACG,SADnB,MAEEW,KAAK,CAAE,CAFT,GAID,CALD,IAKO,CACLd,aAAa,CAACG,SAAd,gCACKH,aAAa,CAACG,SADnB,MAEEY,IAAI,CAAE,CAFR,GAID,CAED,MAAOC,yBAAWC,MAAX,CAAkBjB,aAAlB,CAAP,CACD,CArCM,C","sourcesContent":["import { StyleSheet, Dimensions } from 'react-native';\r\nimport { ThemeType } from '../../theme';\r\n\r\nimport {\r\n  createBorderColorStyles,\r\n  createBorderWidthStyles,\r\n  createBorderRadiusStyles,\r\n  getThemeColor,\r\n} from '../../theme/theme.service';\r\nimport { DrawerProps } from './drawer.type';\r\n\r\nconst SCREEN_WIDTH = Dimensions.get('window').width;\r\nconst SCREEN_HEIGHT = Dimensions.get('window').height;\r\n\r\n/**\r\n * computed style\r\n *\r\n * @param theme\r\n * @param props\r\n */\r\nexport const getStyle = (theme: ThemeType, props: DrawerProps) => {\r\n  const computedStyle: any = {};\r\n\r\n  computedStyle.drawer = {\r\n    margin: 0,\r\n  };\r\n\r\n  computedStyle.container = {\r\n    position: 'absolute',\r\n    height: SCREEN_HEIGHT,\r\n    // @ts-ignore\r\n    width: SCREEN_WIDTH * (props.drawerPercentage / 100),\r\n    zIndex: 0,\r\n    margin: 0,\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n    ...createBorderWidthStyles(props),\r\n    ...createBorderColorStyles(props, theme.colors),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n  };\r\n\r\n  computedStyle.safeView = {\r\n    flex: 1,\r\n  };\r\n\r\n  if (props.direction === 'right') {\r\n    computedStyle.container = {\r\n      ...computedStyle.container,\r\n      right: 0,\r\n    };\r\n  } else {\r\n    computedStyle.container = {\r\n      ...computedStyle.container,\r\n      left: 0,\r\n    };\r\n  }\r\n\r\n  return StyleSheet.create(computedStyle);\r\n};\r\n"]}