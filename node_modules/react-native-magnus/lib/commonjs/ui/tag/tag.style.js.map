{"version":3,"sources":["tag.style.tsx"],"names":["getStyle","theme","props","computedStyle","div","borderColor","colors","borderWidth","justifyContent","alignItems","flexDirection","alignSelf","backgroundColor","bg","spacing","borderRadius","prefix","marginRight","suffix","marginLeft","h","height","w","width","minH","minHeight","minW","minWidth","style","StyleSheet","create"],"mappings":"+QAAA,yCAGA,gD,yyBAeO,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAmBC,KAAnB,CAAuC,CAC7D,GAAMC,CAAAA,aAAkB,CAAG,EAA3B,CAEAA,aAAa,CAACC,GAAd,0DACEC,WAAW,CAAE,yBAAcJ,KAAK,CAACK,MAApB,CAA4BJ,KAAK,CAACG,WAAlC,CADf,CAEEE,WAAW,CAAEL,KAAK,CAACK,WAFrB,CAGEC,cAAc,CAAE,QAHlB,CAIEC,UAAU,CAAE,QAJd,CAKEC,aAAa,CAAE,KALjB,CAMEC,SAAS,CAAE,YANb,CAOEC,eAAe,CAAE,yBAAcX,KAAK,CAACK,MAApB,CAA4BJ,KAAK,CAACW,EAAlC,CAPnB,EAQK,mCAAwBX,KAAxB,CARL,EASK,+BAAoBA,KAApB,CAA2BD,KAAK,CAACa,OAAjC,CATL,EAUK,mCAAwBZ,KAAxB,CAA+BD,KAAK,CAACK,MAArC,CAVL,EAWK,oCAAyBJ,KAAzB,CAAgCD,KAAK,CAACc,YAAtC,CAXL,EAcAZ,aAAa,CAACa,MAAd,CAAuB,CACrBC,WAAW,CAAE,CADQ,CAAvB,CAIAd,aAAa,CAACe,MAAd,CAAuB,CACrBC,UAAU,CAAE,CADS,CAAvB,CAIA,GAAIjB,KAAK,CAACkB,CAAV,CAAa,CACXjB,aAAa,CAACC,GAAd,gCACKD,aAAa,CAACC,GADnB,MAEEiB,MAAM,CAAEnB,KAAK,CAACkB,CAFhB,GAID,CAED,GAAIlB,KAAK,CAACoB,CAAV,CAAa,CACXnB,aAAa,CAACC,GAAd,gCACKD,aAAa,CAACC,GADnB,MAEEmB,KAAK,CAAErB,KAAK,CAACoB,CAFf,GAID,CAED,GAAIpB,KAAK,CAACsB,IAAV,CAAgB,CACdrB,aAAa,CAACC,GAAd,gCACKD,aAAa,CAACC,GADnB,MAEEqB,SAAS,CAAEvB,KAAK,CAACsB,IAFnB,GAID,CAED,GAAItB,KAAK,CAACwB,IAAV,CAAgB,CACdvB,aAAa,CAACC,GAAd,gCACKD,aAAa,CAACC,GADnB,MAEEuB,QAAQ,CAAEzB,KAAK,CAACwB,IAFlB,GAID,CAGD,GAAIxB,KAAK,CAAC0B,KAAV,CAAiB,CACfzB,aAAa,CAACC,GAAd,gCACKD,aAAa,CAACC,GADnB,EAGKF,KAAK,CAAC0B,KAHX,EAKD,CAED,MAAOC,yBAAWC,MAAX,CAAkB3B,aAAlB,CAAP,CACD,CA/DM,C","sourcesContent":["import { StyleSheet } from 'react-native';\r\nimport { ThemeType } from '../../theme';\r\n\r\nimport {\r\n  createSpacingStyles,\r\n  createBorderRadiusStyles,\r\n  createBorderColorStyles,\r\n  createBorderWidthStyles,\r\n  getThemeColor,\r\n} from '../../theme/theme.service';\r\nimport { TagProps } from './tag.type';\r\n\r\n/**\r\n * computed style\r\n *\r\n * @param theme\r\n * @param props\r\n */\r\nexport const getStyle = (theme: ThemeType, props: TagProps) => {\r\n  const computedStyle: any = {};\r\n\r\n  computedStyle.div = {\r\n    borderColor: getThemeColor(theme.colors, props.borderColor),\r\n    borderWidth: props.borderWidth,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    alignSelf: 'flex-start',\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n    ...createBorderWidthStyles(props),\r\n    ...createSpacingStyles(props, theme.spacing),\r\n    ...createBorderColorStyles(props, theme.colors),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n  };\r\n\r\n  computedStyle.prefix = {\r\n    marginRight: 4,\r\n  };\r\n\r\n  computedStyle.suffix = {\r\n    marginLeft: 4,\r\n  };\r\n\r\n  if (props.h) {\r\n    computedStyle.div = {\r\n      ...computedStyle.div,\r\n      height: props.h,\r\n    };\r\n  }\r\n\r\n  if (props.w) {\r\n    computedStyle.div = {\r\n      ...computedStyle.div,\r\n      width: props.w,\r\n    };\r\n  }\r\n\r\n  if (props.minH) {\r\n    computedStyle.div = {\r\n      ...computedStyle.div,\r\n      minHeight: props.minH,\r\n    };\r\n  }\r\n\r\n  if (props.minW) {\r\n    computedStyle.div = {\r\n      ...computedStyle.div,\r\n      minWidth: props.minW,\r\n    };\r\n  }\r\n\r\n  // merging style props to computed style\r\n  if (props.style) {\r\n    computedStyle.div = {\r\n      ...computedStyle.div,\r\n      // @ts-ignore\r\n      ...props.style,\r\n    };\r\n  }\r\n\r\n  return StyleSheet.create(computedStyle);\r\n};\r\n"]}