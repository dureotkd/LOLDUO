{"version":3,"sources":["overlay.component.tsx"],"names":["Overlay","React","forwardRef","incomingProps","ref","props","bg","w","p","rounded","overlayOpacity","overlayColor","animationType","transparent","onBackdropPress","m","mt","mr","mb","ml","ms","pr","pt","pb","pl","h","alignItems","justifyContent","roundedTop","roundedRight","roundedBottom","roundedLeft","isVisible","visible","children","onRequestClose","rest","theme","computedStyle","setVisible","open","close","modal","container"],"mappings":"iiBAAA,oDACA,yCAOA,wCACA,kCACA,0CAEA,gE,0FAEA,GAAMA,CAAAA,OAAO,CAAGC,KAAK,CAACC,UAAN,CAGd,SAACC,aAAD,CAAgBC,GAAhB,CAAwB,CACxB,GAAMC,CAAAA,KAAK,CAAG,qCAAgB,SAAhB,CAA2BF,aAA3B,CAA0C,CACtDG,EAAE,CAAE,OADkD,CAEtDC,CAAC,CAAE,KAFmD,CAGtDC,CAAC,CAAE,IAHmD,CAItDC,OAAO,CAAE,IAJ6C,CAKtDC,cAAc,CAAE,GALsC,CAMtDC,YAAY,CAAE,SANwC,CAOtDC,aAAa,CAAE,MAPuC,CAQtDC,WAAW,CAAE,IARyC,CAStDC,eAAe,CAAE,0BAAM,CAAE,CAT6B,CAA1C,CAAd,CADwB,GActBC,CAAAA,CAdsB,CA0CpBV,KA1CoB,CActBU,CAdsB,CAetBC,EAfsB,CA0CpBX,KA1CoB,CAetBW,EAfsB,CAgBtBC,EAhBsB,CA0CpBZ,KA1CoB,CAgBtBY,EAhBsB,CAiBtBC,EAjBsB,CA0CpBb,KA1CoB,CAiBtBa,EAjBsB,CAkBtBC,EAlBsB,CA0CpBd,KA1CoB,CAkBtBc,EAlBsB,CAmBtBC,EAnBsB,CA0CpBf,KA1CoB,CAmBtBe,EAnBsB,CAoBtBZ,CApBsB,CA0CpBH,KA1CoB,CAoBtBG,CApBsB,CAqBtBa,EArBsB,CA0CpBhB,KA1CoB,CAqBtBgB,EArBsB,CAsBtBC,EAtBsB,CA0CpBjB,KA1CoB,CAsBtBiB,EAtBsB,CAuBtBC,EAvBsB,CA0CpBlB,KA1CoB,CAuBtBkB,EAvBsB,CAwBtBC,EAxBsB,CA0CpBnB,KA1CoB,CAwBtBmB,EAxBsB,CAyBtBlB,EAzBsB,CA0CpBD,KA1CoB,CAyBtBC,EAzBsB,CA0BtBC,CA1BsB,CA0CpBF,KA1CoB,CA0BtBE,CA1BsB,CA2BtBkB,CA3BsB,CA0CpBpB,KA1CoB,CA2BtBoB,CA3BsB,CA4BtBC,UA5BsB,CA0CpBrB,KA1CoB,CA4BtBqB,UA5BsB,CA6BtBC,cA7BsB,CA0CpBtB,KA1CoB,CA6BtBsB,cA7BsB,CA8BtBlB,OA9BsB,CA0CpBJ,KA1CoB,CA8BtBI,OA9BsB,CA+BtBmB,UA/BsB,CA0CpBvB,KA1CoB,CA+BtBuB,UA/BsB,CAgCtBC,YAhCsB,CA0CpBxB,KA1CoB,CAgCtBwB,YAhCsB,CAiCtBC,aAjCsB,CA0CpBzB,KA1CoB,CAiCtByB,aAjCsB,CAkCtBC,WAlCsB,CA0CpB1B,KA1CoB,CAkCtB0B,WAlCsB,CAmCbC,SAnCa,CA0CpB3B,KA1CoB,CAmCtB4B,OAnCsB,CAoCtBC,QApCsB,CA0CpB7B,KA1CoB,CAoCtB6B,QApCsB,CAqCtBvB,YArCsB,CA0CpBN,KA1CoB,CAqCtBM,YArCsB,CAsCtBD,cAtCsB,CA0CpBL,KA1CoB,CAsCtBK,cAtCsB,CAuCtByB,cAvCsB,CA0CpB9B,KA1CoB,CAuCtB8B,cAvCsB,CAwCtBrB,eAxCsB,CA0CpBT,KA1CoB,CAwCtBS,eAxCsB,CAyCnBsB,IAzCmB,uCA0CpB/B,KA1CoB,8QA2CN,qBA3CM,CA2ChBgC,KA3CgB,WA2ChBA,KA3CgB,CA4CxB,GAAMC,CAAAA,aAAa,CAAG,sBAASD,KAAT,CAAgBhC,KAAhB,CAAtB,CA5CwB,cA6CM,mBAAS2B,SAAT,SAASA,SAAT,UAASA,SAAT,CAAsB,KAAtB,CA7CN,qDA6CjBC,OA7CiB,eA6CRM,UA7CQ,eA+CxB,oBAAU,UAAM,CACd,GAAI,WAAalC,CAAAA,KAAjB,CAAwB,CACtBkC,UAAU,CAACP,SAAD,SAACA,SAAD,UAACA,SAAD,CAAc,KAAd,CAAV,CACD,CACF,CAJD,CAIG,CAACA,SAAD,CAAY3B,KAAZ,CAJH,EASA,8BAAoBD,GAApB,CAAyB,iBAAO,CAC9BoC,IAD8B,gBACvB,CACL,GAAIP,OAAO,GAAK,KAAhB,CAAuB,CACrBM,UAAU,CAAC,IAAD,CAAV,CACD,CACF,CAL6B,CAM9BE,KAN8B,iBAMtB,CACN,GAAIR,OAAO,GAAK,IAAhB,CAAsB,CACpBM,UAAU,CAAC,KAAD,CAAV,CACD,CACF,CAV6B,CAAP,EAAzB,EAaA,MACE,qBAAC,kBAAD,wBACE,OAAO,CAAEN,OADX,CAEE,cAAc,CACZ,0BAAWE,cAAX,EAA6BA,cAA7B,CAA8C,iBAAMI,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAHlD,EAKMH,IALN,kEAOE,oBAAC,qCAAD,EAA4B,OAAO,CAAEtB,eAArC,gEACE,oBAAC,iBAAD,EAAQ,KAAK,CAAEwB,aAAa,CAACI,KAA7B,gEACE,oBAAC,qCAAD,kEACE,oBAAC,iBAAD,EAAQ,KAAK,CAAEJ,aAAa,CAACK,SAA7B,iEAAyCT,QAAzC,CADF,CADF,CADF,CAPF,CADF,CAiBD,CAzFe,CAAhB,C","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  View as RNView,\r\n  Modal as RNModal,\r\n  TouchableWithoutFeedback as RNTouchableWithoutFeedback,\r\n} from 'react-native';\r\nimport { useState, useEffect, useImperativeHandle } from 'react';\r\n\r\nimport { getStyle } from './overlay.style';\r\nimport { useTheme } from '../../theme';\r\nimport { isFunction } from '../../utilities';\r\nimport { OverlayProps, OverlayRef } from './overlay.type';\r\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\r\n\r\nconst Overlay = React.forwardRef<\r\n  OverlayRef,\r\n  React.PropsWithChildren<OverlayProps>\r\n>((incomingProps, ref) => {\r\n  const props = useDefaultProps('Overlay', incomingProps, {\r\n    bg: 'white',\r\n    w: '80%',\r\n    p: 'lg',\r\n    rounded: 'md',\r\n    overlayOpacity: 0.6,\r\n    overlayColor: 'gray900',\r\n    animationType: 'fade',\r\n    transparent: true,\r\n    onBackdropPress: () => {},\r\n  });\r\n\r\n  const {\r\n    m,\r\n    mt,\r\n    mr,\r\n    mb,\r\n    ml,\r\n    ms,\r\n    p,\r\n    pr,\r\n    pt,\r\n    pb,\r\n    pl,\r\n    bg,\r\n    w,\r\n    h,\r\n    alignItems,\r\n    justifyContent,\r\n    rounded,\r\n    roundedTop,\r\n    roundedRight,\r\n    roundedBottom,\r\n    roundedLeft,\r\n    visible: isVisible,\r\n    children,\r\n    overlayColor,\r\n    overlayOpacity,\r\n    onRequestClose,\r\n    onBackdropPress,\r\n    ...rest\r\n  } = props;\r\n  const { theme } = useTheme();\r\n  const computedStyle = getStyle(theme, props);\r\n  const [visible, setVisible] = useState(isVisible ?? false);\r\n\r\n  useEffect(() => {\r\n    if ('visible' in props) {\r\n      setVisible(isVisible ?? false);\r\n    }\r\n  }, [isVisible, props]);\r\n\r\n  /**\r\n   * exposing functions to parent\r\n   */\r\n  useImperativeHandle(ref, () => ({\r\n    open() {\r\n      if (visible === false) {\r\n        setVisible(true);\r\n      }\r\n    },\r\n    close() {\r\n      if (visible === true) {\r\n        setVisible(false);\r\n      }\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <RNModal\r\n      visible={visible}\r\n      onRequestClose={\r\n        isFunction(onRequestClose) ? onRequestClose : () => setVisible(false)\r\n      }\r\n      {...rest}\r\n    >\r\n      <RNTouchableWithoutFeedback onPress={onBackdropPress}>\r\n        <RNView style={computedStyle.modal}>\r\n          <RNTouchableWithoutFeedback>\r\n            <RNView style={computedStyle.container}>{children}</RNView>\r\n          </RNTouchableWithoutFeedback>\r\n        </RNView>\r\n      </RNTouchableWithoutFeedback>\r\n    </RNModal>\r\n  );\r\n});\r\n\r\nexport { Overlay };\r\n"]}