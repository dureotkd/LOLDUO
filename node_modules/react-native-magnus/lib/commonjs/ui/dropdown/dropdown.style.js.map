{"version":3,"sources":["dropdown.style.tsx"],"names":["getStyle","theme","props","computedStyle","wrapper","height","h","width","w","minHeight","minH","minWidth","minW","alignSelf","overflow","backgroundColor","colors","bg","borderRadius","indicator","marginVertical","container","spacing","options","flexWrap","flexDirection","flexDir","alignItems","justifyContent","style","StyleSheet","create"],"mappings":"+QAAA,yCAGA,gD,yyBAeO,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAmBC,KAAnB,CAA4C,CAClE,GAAMC,CAAAA,aAAkB,CAAG,EAA3B,CAEAA,aAAa,CAACC,OAAd,4CACEC,MAAM,CAAEH,KAAK,CAACI,CADhB,CAEEC,KAAK,CAAEL,KAAK,CAACM,CAFf,CAGEC,SAAS,CAAEP,KAAK,CAACQ,IAHnB,CAIEC,QAAQ,CAAET,KAAK,CAACU,IAJlB,CAKEC,SAAS,CAAE,QALb,CAMEC,QAAQ,CAAEZ,KAAK,CAACY,QANlB,CAOEC,eAAe,CAAE,yBAAcd,KAAK,CAACe,MAApB,CAA4Bd,KAAK,CAACe,EAAlC,CAPnB,EAQK,mCAAwBf,KAAxB,CARL,EASK,mCAAwBA,KAAxB,CAA+BD,KAAK,CAACe,MAArC,CATL,EAUK,oCAAyBd,KAAzB,CAAgCD,KAAK,CAACiB,YAAtC,CAVL,EAaAf,aAAa,CAACgB,SAAd,CAA0B,CACxBN,SAAS,CAAE,QADa,CAExBO,cAAc,CAAE,EAFQ,CAA1B,CAKAjB,aAAa,CAACkB,SAAd,kBACK,+BAAoBnB,KAApB,CAA2BD,KAAK,CAACqB,OAAjC,CADL,EAIAnB,aAAa,CAACoB,OAAd,CAAwB,CACtBC,QAAQ,CAAEtB,KAAK,CAACsB,QADM,CAEtBC,aAAa,CAAEvB,KAAK,CAACwB,OAFC,CAGtBC,UAAU,CAAEzB,KAAK,CAACyB,UAHI,CAItBC,cAAc,CAAE1B,KAAK,CAAC0B,cAJA,CAAxB,CAQA,GAAI1B,KAAK,CAAC2B,KAAV,CAAiB,CACf1B,aAAa,CAACkB,SAAd,gCACKlB,aAAa,CAACkB,SADnB,EAGKnB,KAAK,CAAC2B,KAHX,EAKD,CAED,MAAOC,yBAAWC,MAAX,CAAkB5B,aAAlB,CAAP,CACD,CA1CM,C","sourcesContent":["import { StyleSheet } from 'react-native';\r\nimport { ThemeType } from '../../theme';\r\n\r\nimport {\r\n  createSpacingStyles,\r\n  createBorderWidthStyles,\r\n  createBorderColorStyles,\r\n  createBorderRadiusStyles,\r\n  getThemeColor,\r\n} from '../../theme/theme.service';\r\nimport { DropdownProps } from './dropdown.type';\r\n\r\n/**\r\n * computed style\r\n *\r\n * @param theme\r\n * @param props\r\n */\r\nexport const getStyle = (theme: ThemeType, props: DropdownProps) => {\r\n  const computedStyle: any = {};\r\n\r\n  computedStyle.wrapper = {\r\n    height: props.h,\r\n    width: props.w,\r\n    minHeight: props.minH,\r\n    minWidth: props.minW,\r\n    alignSelf: 'center',\r\n    overflow: props.overflow,\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n    ...createBorderWidthStyles(props),\r\n    ...createBorderColorStyles(props, theme.colors),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n  };\r\n\r\n  computedStyle.indicator = {\r\n    alignSelf: 'center',\r\n    marginVertical: 10,\r\n  };\r\n\r\n  computedStyle.container = {\r\n    ...createSpacingStyles(props, theme.spacing),\r\n  };\r\n\r\n  computedStyle.options = {\r\n    flexWrap: props.flexWrap,\r\n    flexDirection: props.flexDir,\r\n    alignItems: props.alignItems,\r\n    justifyContent: props.justifyContent,\r\n  };\r\n\r\n  // merging style props to computed style\r\n  if (props.style) {\r\n    computedStyle.container = {\r\n      ...computedStyle.container,\r\n      // @ts-ignore\r\n      ...props.style,\r\n    };\r\n  }\r\n\r\n  return StyleSheet.create(computedStyle);\r\n};\r\n"]}