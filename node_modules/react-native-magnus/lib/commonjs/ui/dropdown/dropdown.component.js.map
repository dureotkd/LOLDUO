{"version":3,"sources":["dropdown.component.tsx"],"names":["Dropdown","React","forwardRef","incomingProps","ref","props","bg","rounded","showSwipeIndicator","Platform","OS","backdropColor","backdropOpacity","flexWrap","backdropTransitionOutTiming","overflow","py","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","roundedTop","roundedRight","roundedBottom","roundedLeft","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","borderEndWidth","title","children","flexDir","isVisible","onBackdropPress","swipeDirection","onSwipeComplete","rest","theme","computedStyle","visible","setVisible","open","close","renderTitle","renderIndicator","indicator","params","colors","margin","justifyContent","wrapper","container","options","Children","map","child","cloneElement","onSelect","Option","DropdownOption"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Modal from 'react-native-modal';\r\nimport { SafeAreaView, Platform, View } from 'react-native';\r\nimport { useState, useImperativeHandle, useEffect } from 'react';\r\n\r\nimport { Div } from '../div/div.component';\r\nimport { getStyle } from './dropdown.style';\r\nimport { Text } from '../text/text.component';\r\nimport { DropdownOption } from './dropdown.option.component';\r\nimport { useTheme } from '../../theme';\r\nimport {\r\n  DropdownProps,\r\n  DropdownRef,\r\n  CompoundedDropdown,\r\n} from './dropdown.type';\r\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\r\nimport { getThemeColor } from '../../theme/theme.service';\r\n\r\nconst Dropdown = React.forwardRef<DropdownRef, DropdownProps>(\r\n  (incomingProps, ref) => {\r\n    const props = useDefaultProps('Dropdown', incomingProps, {\r\n      bg: 'white',\r\n      rounded: 'none',\r\n      showSwipeIndicator: Platform.OS === 'web' ? false : true,\r\n      backdropColor: 'gray900',\r\n      backdropOpacity: 0.5,\r\n      flexWrap: 'nowrap',\r\n      backdropTransitionOutTiming: 0,\r\n      overflow: 'hidden',\r\n      py: 'xl',\r\n    });\r\n\r\n    const {\r\n      bg,\r\n      m,\r\n      mt,\r\n      mr,\r\n      mb,\r\n      ml,\r\n      ms,\r\n      p,\r\n      pr,\r\n      pt,\r\n      pb,\r\n      pl,\r\n      rounded,\r\n      roundedTop,\r\n      roundedRight,\r\n      roundedBottom,\r\n      roundedLeft,\r\n      borderColor,\r\n      borderBottomColor,\r\n      borderLeftColor,\r\n      borderTopColor,\r\n      borderRightColor,\r\n      borderWidth,\r\n      borderLeftWidth,\r\n      borderRightWidth,\r\n      borderBottomWidth,\r\n      borderTopWidth,\r\n      borderEndWidth,\r\n      title,\r\n      showSwipeIndicator,\r\n      children,\r\n      backdropColor,\r\n      flexDir,\r\n      flexWrap,\r\n      isVisible,\r\n      onBackdropPress,\r\n      swipeDirection,\r\n      onSwipeComplete,\r\n      ...rest\r\n    } = props;\r\n    const { theme } = useTheme();\r\n    const computedStyle = getStyle(theme, props as DropdownProps);\r\n    const [visible, setVisible] = useState(props.isVisible ?? false);\r\n\r\n    useEffect(() => {\r\n      if ('isVisible' in props) {\r\n        setVisible(props.isVisible ?? false);\r\n      }\r\n    }, [props, visible]);\r\n\r\n    /**\r\n     * exposing functions through ref\r\n     */\r\n    useImperativeHandle(ref, () => ({\r\n      open() {\r\n        setVisible(true);\r\n      },\r\n      close() {\r\n        setVisible(false);\r\n      },\r\n    }));\r\n\r\n    /**\r\n     * render title\r\n     */\r\n    const renderTitle = () => {\r\n      if (title) {\r\n        return typeof title === 'string' ? (\r\n          <Text fontSize=\"md\" color=\"gray700\">\r\n            {title}\r\n          </Text>\r\n        ) : (\r\n          title\r\n        );\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    /**\r\n     * render scroll indicator\r\n     */\r\n    const renderIndicator = () => {\r\n      return (\r\n        showSwipeIndicator && (\r\n          <Div\r\n            h={7}\r\n            rounded=\"xl\"\r\n            w={40}\r\n            bg=\"gray200\"\r\n            style={computedStyle.indicator}\r\n          />\r\n        )\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Modal\r\n        isVisible={visible}\r\n        onSwipeComplete={(params) => {\r\n          setVisible(false);\r\n          onSwipeComplete && onSwipeComplete(params);\r\n        }}\r\n        backdropColor={getThemeColor(theme.colors, backdropColor)}\r\n        onBackdropPress={\r\n          'onBackdropPress' in props ? onBackdropPress : () => setVisible(false)\r\n        }\r\n        style={{\r\n          margin: 0,\r\n          justifyContent: Platform.OS === 'web' ? 'center' : 'flex-end',\r\n        }}\r\n        swipeDirection=\"down\"\r\n        {...rest}\r\n      >\r\n        <View style={computedStyle.wrapper}>\r\n          {renderIndicator()}\r\n          <SafeAreaView>\r\n            <View style={computedStyle.container}>\r\n              {renderTitle()}\r\n              <View style={computedStyle.options}>\r\n                {React.Children.map(children, (child: React.ReactElement) => {\r\n                  return React.cloneElement(child, {\r\n                    onSelect: () => {\r\n                      setVisible(false);\r\n                    },\r\n                  });\r\n                })}\r\n              </View>\r\n            </View>\r\n          </SafeAreaView>\r\n        </View>\r\n      </Modal>\r\n    );\r\n  }\r\n) as CompoundedDropdown;\r\n\r\nDropdown.Option = DropdownOption;\r\n\r\n// Dropdown.defaultProps = {\r\n//   bg: 'white',\r\n//   rounded: 'none',\r\n//   showSwipeIndicator: Platform.OS === 'web' ? false : true,\r\n//   backdropColor: 'gray900',\r\n//   backdropOpacity: 0.5,\r\n//   flexWrap: 'nowrap',\r\n//   backdropTransitionOutTiming: 0,\r\n//   overflow: 'hidden',\r\n// };\r\n\r\nexport { Dropdown };\r\n"]}