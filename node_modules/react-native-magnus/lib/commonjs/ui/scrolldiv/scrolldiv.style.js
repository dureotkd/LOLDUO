"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.getStyle=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _reactNative=require("react-native");var _theme=require("../../theme/theme.service");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var getStyle=function getStyle(theme,props){var computedStyle={};computedStyle.div=_objectSpread(_objectSpread(_objectSpread(_objectSpread({flexDirection:props.flexDir,flexWrap:props.flexWrap,alignItems:props.alignItems,justifyContent:props.justifyContent,position:props.position,backgroundColor:(0,_theme.getThemeColor)(theme.colors,props.bg)},(0,_theme.createBorderWidthStyles)(props)),(0,_theme.createSpacingStyles)(props,theme.spacing)),(0,_theme.createBorderColorStyles)(props,theme.colors)),(0,_theme.createBorderRadiusStyles)(props,theme.borderRadius));computedStyle.image=_objectSpread({},(0,_theme.createBorderRadiusStyles)(props,theme.borderRadius));if(props.flex){computedStyle.div=_objectSpread(_objectSpread({},computedStyle.div),{},{flex:props.flex});}if(props.shadow){computedStyle.div=_objectSpread(_objectSpread(_objectSpread({},computedStyle.div),theme.shadow&&theme.shadow[props.shadow]),{},{shadowColor:(0,_theme.getThemeColor)(theme.colors,props.shadowColor)});}if(props.h){computedStyle.div=_objectSpread(_objectSpread({},computedStyle.div),{},{height:props.h});}if(props.w){computedStyle.div=_objectSpread(_objectSpread({},computedStyle.div),{},{width:props.w});}if(props.top){computedStyle.div=_objectSpread(_objectSpread({},computedStyle.div),{},{top:props.top});}if(props.right){computedStyle.div=_objectSpread(_objectSpread({},computedStyle.div),{},{right:props.right});}if(props.bottom){computedStyle.div=_objectSpread(_objectSpread({},computedStyle.div),{},{bottom:props.bottom});}if(props.left){computedStyle.div=_objectSpread(_objectSpread({},computedStyle.div),{},{left:props.left});}if(props.minH){computedStyle.div=_objectSpread(_objectSpread({},computedStyle.div),{},{minHeight:props.minH});}if(props.minW){computedStyle.div=_objectSpread(_objectSpread({},computedStyle.div),{},{minWidth:props.minW});}if(props.style){computedStyle.div=_objectSpread(_objectSpread({},computedStyle.div),props.style);}return _reactNative.StyleSheet.create(computedStyle);};exports.getStyle=getStyle;
//# sourceMappingURL=scrolldiv.style.js.map