{"version":3,"sources":["icon.component.tsx"],"names":["Icon","incomingProps","props","color","fontSize","fontFamily","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","h","w","bg","position","left","top","bottom","right","name","rounded","maxH","maxW","minW","minH","roundedTop","roundedRight","roundedBottom","roundedLeft","shadow","shadowColor","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","borderEndWidth","opacity","zIndex","style","rest","theme","computedStyle","container","colors","icon"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View as RNView } from 'react-native';\r\n\r\nimport { getStyle } from './icon.style';\r\nimport { getIconSet } from './icon.service';\r\nimport { useTheme } from '../../theme';\r\nimport { IconProps } from './icon.type';\r\nimport { getThemeProperty, getThemeColor } from '../../theme/theme.service';\r\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\r\n\r\nconst Icon: React.FunctionComponent<IconProps> = (incomingProps) => {\r\n  const props = useDefaultProps('Icon', incomingProps, {\r\n    color: 'gray500',\r\n    fontSize: 'md',\r\n    fontFamily: 'AntDesign',\r\n  });\r\n\r\n  const {\r\n    m,\r\n    mt,\r\n    mr,\r\n    mb,\r\n    ml,\r\n    ms,\r\n    p,\r\n    pr,\r\n    pt,\r\n    pb,\r\n    pl,\r\n    h,\r\n    w,\r\n    bg,\r\n    position,\r\n    left,\r\n    top,\r\n    bottom,\r\n    right,\r\n    name,\r\n    color,\r\n    rounded,\r\n    maxH,\r\n    maxW,\r\n    minW,\r\n    minH,\r\n    roundedTop,\r\n    roundedRight,\r\n    roundedBottom,\r\n    roundedLeft,\r\n    shadow,\r\n    shadowColor,\r\n    borderColor,\r\n    borderBottomColor,\r\n    borderLeftColor,\r\n    borderTopColor,\r\n    borderRightColor,\r\n    borderWidth,\r\n    borderLeftWidth,\r\n    borderRightWidth,\r\n    borderBottomWidth,\r\n    borderTopWidth,\r\n    borderEndWidth,\r\n    fontFamily,\r\n    fontSize,\r\n    opacity,\r\n    zIndex,\r\n    style,\r\n    ...rest\r\n  } = props;\r\n  const { theme } = useTheme();\r\n  const computedStyle = getStyle(theme, props);\r\n\r\n  const Icon = getIconSet(fontFamily);\r\n\r\n  return (\r\n    <RNView style={computedStyle.container} {...rest}>\r\n      <Icon\r\n        color={getThemeColor(theme.colors, color)}\r\n        size={getThemeProperty(theme.fontSize, fontSize)}\r\n        name={name}\r\n        style={computedStyle.icon}\r\n      />\r\n    </RNView>\r\n  );\r\n};\r\n\r\n// Icon.defaultProps = {\r\n//   color: 'gray500',\r\n//   fontSize: 'md',\r\n//   fontFamily: 'AntDesign',\r\n// };\r\n\r\nexport { Icon };\r\n"]}