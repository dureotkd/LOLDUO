{"version":3,"sources":["badge.component.tsx"],"names":["Badge","incomingProps","props","bg","rounded","shadow","color","top","right","shadowColor","position","fontSize","fontWeight","h","w","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","minH","minW","style","roundedTop","roundedRight","roundedBottom","roundedLeft","alignItems","justifyContent","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderEndWidth","children","left","bottom","count","opacity","rest","theme","computedStyle","container","alignSelf","div","getSpecificProps","textProps","text"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View as RNView } from 'react-native';\r\n\r\nimport { BadgeProps } from './badge.type';\r\nimport { getStyle } from './badge.style';\r\nimport { useTheme } from '../../theme';\r\nimport { Text } from '../text/text.component';\r\nimport { getSpecificProps } from '../../utilities';\r\nimport { textProps } from '../../types';\r\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\r\n\r\nconst Badge: React.FunctionComponent<BadgeProps> = (incomingProps) => {\r\n  const props = useDefaultProps('Badge', incomingProps, {\r\n    bg: 'green700',\r\n    rounded: 'circle',\r\n    shadow: 0,\r\n    color: 'white',\r\n    top: 0,\r\n    right: 0,\r\n    shadowColor: 'gray900',\r\n    position: 'relative',\r\n    fontSize: 'sm',\r\n    fontWeight: 'bold',\r\n  });\r\n\r\n  const {\r\n    h,\r\n    w,\r\n    m,\r\n    mt,\r\n    mr,\r\n    bg,\r\n    mb,\r\n    ml,\r\n    ms,\r\n    p,\r\n    pr,\r\n    pt,\r\n    pb,\r\n    pl,\r\n    minH,\r\n    minW,\r\n    style,\r\n    shadow,\r\n    rounded,\r\n    position,\r\n    roundedTop,\r\n    roundedRight,\r\n    roundedBottom,\r\n    roundedLeft,\r\n    alignItems,\r\n    fontSize,\r\n    justifyContent,\r\n    borderColor,\r\n    borderBottomColor,\r\n    borderLeftColor,\r\n    borderTopColor,\r\n    borderRightColor,\r\n    borderWidth,\r\n    borderLeftWidth,\r\n    borderRightWidth,\r\n    borderEndWidth,\r\n    shadowColor,\r\n    children,\r\n    right,\r\n    top,\r\n    left,\r\n    bottom,\r\n    color,\r\n    count,\r\n    opacity,\r\n    ...rest\r\n  } = props;\r\n  const { theme } = useTheme();\r\n  const computedStyle = getStyle(theme, props);\r\n\r\n  return (\r\n    <RNView style={computedStyle.container}>\r\n      <RNView style={{ alignSelf: 'flex-start' }}>\r\n        {typeof children !== 'string' && children}\r\n\r\n        <RNView style={computedStyle.div} {...rest}>\r\n          {typeof children === 'string' && (\r\n            <Text\r\n              {...getSpecificProps(props, ...textProps)}\r\n              style={computedStyle.text}\r\n            >\r\n              {children}\r\n            </Text>\r\n          )}\r\n        </RNView>\r\n      </RNView>\r\n    </RNView>\r\n  );\r\n};\r\n\r\n// Badge.defaultProps = {\r\n//   bg: 'green700',\r\n//   rounded: 'circle',\r\n//   shadow: 0,\r\n//   color: 'white',\r\n//   top: 0,\r\n//   right: 0,\r\n//   shadowColor: 'gray900',\r\n//   position: 'relative',\r\n//   fontSize: 'sm',\r\n// };\r\n\r\nexport { Badge };\r\n"]}