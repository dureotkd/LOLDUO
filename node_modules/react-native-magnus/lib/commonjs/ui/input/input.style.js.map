{"version":3,"sources":["input.style.tsx"],"names":["getStyle","theme","props","state","computedStyle","container","flexDirection","alignItems","zIndex","minHeight","minH","minWidth","minW","maxHeight","maxH","maxWidth","maxW","width","w","height","h","opacity","backgroundColor","colors","bg","spacing","borderRadius","isFocussed","borderColor","focusBorderColor","input","flex","padding","textDecorationLine","textDecorLine","textDecorationStyle","textDecorStyle","letterSpacing","fontStyle","textAlignVertical","lineHeight","color","fontSize","textAlign","textTransform","textDecorationColor","textDecorColor","textShadowColor","textShadowOffset","shadow","textShadowRadius","fontWeight","fontFamily","suffix","justifyContent","alignSelf","marginLeft","prefix","marginRight","style","StyleSheet","create"],"mappings":"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","sourcesContent":["import { isValidElement } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { ThemeType } from '../../theme';\r\n\r\nimport {\r\n  getThemeProperty,\r\n  createBorderWidthStyles,\r\n  createBorderColorStyles,\r\n  createSpacingStyles,\r\n  createFlexStyles,\r\n  createBorderRadiusStyles,\r\n  createPositionStyle,\r\n  createShadowStyles,\r\n  getThemeFontFamily,\r\n  getFontWeight,\r\n  getThemeColor,\r\n} from '../../theme/theme.service';\r\nimport { InputProps } from './input.type';\r\n\r\n/**\r\n * computed style\r\n *\r\n * @param theme\r\n * @param props\r\n */\r\nexport const getStyle = (theme: ThemeType, props: InputProps, state: any) => {\r\n  const computedStyle: any = {};\r\n\r\n  computedStyle.container = {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    zIndex: props.zIndex,\r\n    minHeight: props.minH,\r\n    minWidth: props.minW,\r\n    maxHeight: props.maxH,\r\n    maxWidth: props.maxW,\r\n    width: props.w,\r\n    height: props.h,\r\n    opacity: props.opacity,\r\n    backgroundColor: getThemeColor(theme.colors, props.bg),\r\n    ...createFlexStyles(props),\r\n    ...createBorderWidthStyles(props),\r\n    ...createShadowStyles(props, theme),\r\n    ...createPositionStyle(props),\r\n    ...createSpacingStyles(props, theme.spacing),\r\n    ...createBorderColorStyles(props, theme.colors),\r\n    ...createBorderRadiusStyles(props, theme.borderRadius),\r\n  };\r\n\r\n  if (state.isFocussed) {\r\n    computedStyle.container = {\r\n      ...computedStyle.container,\r\n      borderColor: getThemeColor(\r\n        theme.colors,\r\n        props.focusBorderColor\r\n          ? props.focusBorderColor\r\n          : computedStyle.container.borderColor\r\n      ),\r\n    };\r\n  }\r\n\r\n  computedStyle.input = {\r\n    flex: 1,\r\n    padding: 0,\r\n\r\n    textDecorationLine: props.textDecorLine,\r\n    textDecorationStyle: props.textDecorStyle,\r\n    letterSpacing: props.letterSpacing,\r\n    fontStyle: props.fontStyle,\r\n    textAlignVertical: props.textAlignVertical,\r\n    lineHeight: props.lineHeight,\r\n    color: getThemeColor(theme.colors, props.color),\r\n    fontSize: getThemeProperty(theme.fontSize, props.fontSize),\r\n    textAlign: props.textAlign,\r\n    textTransform: props.textTransform,\r\n    textDecorationColor: getThemeColor(theme.colors, props.textDecorColor),\r\n    textShadowColor: getThemeColor(theme.colors, props.textShadowColor),\r\n    textShadowOffset: {\r\n      width: getThemeProperty(theme.shadow, props.textShadowOffset),\r\n      height: getThemeProperty(theme.shadow, props.textShadowOffset),\r\n    },\r\n    textShadowRadius: getThemeProperty(\r\n      theme.borderRadius,\r\n      props.textShadowRadius\r\n    ),\r\n\r\n    fontWeight: getFontWeight(\r\n      theme.fontFamily,\r\n      props.fontFamily,\r\n      props.fontWeight\r\n    ),\r\n\r\n    fontFamily:\r\n      props.fontFamily ??\r\n      getThemeFontFamily(theme.fontFamily, props.fontWeight),\r\n  };\r\n\r\n  computedStyle.suffix = {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignSelf:\r\n      props.suffix &&\r\n      isValidElement(props.suffix) &&\r\n      props.suffix.props.alignSelf,\r\n    marginLeft: 5,\r\n  };\r\n\r\n  computedStyle.prefix = {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    marginRight: 5,\r\n    alignSelf:\r\n      props.prefix &&\r\n      isValidElement(props.prefix) &&\r\n      props.prefix.props.alignSelf,\r\n  };\r\n\r\n  // merging style props to computed style\r\n  if (props.style) {\r\n    computedStyle.container = {\r\n      ...computedStyle.container,\r\n      // @ts-ignore\r\n      ...props.style,\r\n    };\r\n  }\r\n\r\n  return StyleSheet.create(computedStyle);\r\n};\r\n"]}