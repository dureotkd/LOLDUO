{"version":3,"sources":["modal.component.tsx"],"names":["Modal","React","forwardRef","incomingProps","ref","props","bg","h","isVisible","justifyContent","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","rounded","roundedTop","roundedRight","roundedBottom","roundedLeft","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderEndWidth","borderTopWidth","children","rest","visible","setVisible","theme","computedStyle","open","close","modal","container","safeView"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport RNModal from 'react-native-modal';\r\nimport { SafeAreaView } from 'react-native';\r\nimport { useState, useEffect, useImperativeHandle } from 'react';\r\n\r\nimport { getStyle } from './modal.style';\r\nimport { useTheme } from '../../theme';\r\nimport { Div } from '../div/div.component';\r\nimport { ModalProps, ModalRef } from './modal.type';\r\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\r\n\r\nconst Modal = React.forwardRef<ModalRef, ModalProps>((incomingProps, ref) => {\r\n  const props = useDefaultProps('Modal', incomingProps, {\r\n    bg: 'white',\r\n    h: '100%',\r\n    isVisible: false,\r\n    justifyContent: 'flex-end',\r\n  });\r\n\r\n  const {\r\n    bg,\r\n    h,\r\n    m,\r\n    mt,\r\n    mr,\r\n    mb,\r\n    ml,\r\n    ms,\r\n    p,\r\n    pr,\r\n    pt,\r\n    pb,\r\n    pl,\r\n    rounded,\r\n    roundedTop,\r\n    roundedRight,\r\n    roundedBottom,\r\n    roundedLeft,\r\n    borderColor,\r\n    borderBottomColor,\r\n    borderLeftColor,\r\n    borderTopColor,\r\n    borderRightColor,\r\n    borderWidth,\r\n    borderLeftWidth,\r\n    borderRightWidth,\r\n    borderBottomWidth,\r\n    borderEndWidth,\r\n    borderTopWidth,\r\n    justifyContent,\r\n    children,\r\n    isVisible,\r\n    ...rest\r\n  } = props;\r\n  const [visible, setVisible] = useState(isVisible);\r\n  const { theme } = useTheme();\r\n  const computedStyle = getStyle(theme, props as ModalProps);\r\n\r\n  useEffect(() => {\r\n    if ('isVisible' in props) {\r\n      setVisible(props.isVisible);\r\n    }\r\n  }, [props, visible]);\r\n\r\n  /**\r\n   * exposing functions through ref\r\n   */\r\n  useImperativeHandle(ref, () => ({\r\n    open() {\r\n      setVisible(true);\r\n    },\r\n    close() {\r\n      setVisible(false);\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <RNModal isVisible={visible} {...rest} style={computedStyle.modal}>\r\n      <Div bg={bg} h={h ?? '100%'} style={computedStyle.container}>\r\n        <SafeAreaView style={computedStyle.safeView}>{children}</SafeAreaView>\r\n      </Div>\r\n    </RNModal>\r\n  );\r\n});\r\n\r\n// Modal.defaultProps = {\r\n//   bg: 'white',\r\n//   h: '100%',\r\n//   isVisible: false,\r\n//   justifyContent: 'flex-end',\r\n// };\r\n\r\nexport { Modal };\r\n"]}