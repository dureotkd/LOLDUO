{"version":3,"sources":["types.ts"],"names":["borderProps","spacingProps","roundedProps","shadowProps","dimensionProps","flexProps","positionProps","backgroundProps","textProps","opacityProps","overflowProps","zIndexProps","loadingProps","preffixSuffixProps","inputProps","disabledProps","buttonProps","overlayProps","variantProps"],"mappings":"8dAoCO,GAAMA,CAAAA,WAAW,CAAG,CACzB,aADyB,CAEzB,gBAFyB,CAGzB,kBAHyB,CAIzB,mBAJyB,CAKzB,iBALyB,CAMzB,aANyB,CAOzB,gBAPyB,CAQzB,kBARyB,CASzB,iBATyB,CAUzB,mBAVyB,CAWzB,kBAXyB,CAYzB,gBAZyB,CAazB,aAbyB,CAApB,C,gCA+BA,GAAMC,CAAAA,YAAY,CAAG,CAC1B,GAD0B,CAE1B,IAF0B,CAG1B,IAH0B,CAI1B,IAJ0B,CAK1B,IAL0B,CAM1B,IAN0B,CAO1B,IAP0B,CAQ1B,IAR0B,CAS1B,GAT0B,CAU1B,IAV0B,CAW1B,IAX0B,CAY1B,IAZ0B,CAa1B,IAb0B,CAc1B,IAd0B,CAe1B,IAf0B,CAgB1B,IAhB0B,CAArB,C,kCAqCA,GAAMC,CAAAA,YAAY,CAAG,CAC1B,SAD0B,CAE1B,gBAF0B,CAG1B,iBAH0B,CAI1B,mBAJ0B,CAK1B,oBAL0B,CAM1B,YAN0B,CAO1B,aAP0B,CAQ1B,cAR0B,CAS1B,eAT0B,CAArB,C,kCAuBA,GAAMC,CAAAA,WAAW,CAAG,CAAC,QAAD,CAAW,aAAX,CAApB,C,gCAMA,GAAMC,CAAAA,cAAc,CAAG,CAC5B,MAD4B,CAE5B,MAF4B,CAG5B,MAH4B,CAI5B,MAJ4B,CAK5B,GAL4B,CAM5B,GAN4B,CAAvB,C,sCAiBA,GAAMC,CAAAA,SAAS,CAAG,CACvB,KADuB,CAEvB,MAFuB,CAGvB,SAHuB,CAIvB,UAJuB,CAKvB,gBALuB,CAMvB,WANuB,CAOvB,YAPuB,CAAlB,C,4BA+BA,GAAMC,CAAAA,aAAa,CAAG,CAC3B,UAD2B,CAE3B,KAF2B,CAG3B,OAH2B,CAI3B,QAJ2B,CAK3B,MAL2B,CAAtB,C,oCAeA,GAAMC,CAAAA,eAAe,CAAG,CAAC,IAAD,CAAO,OAAP,CAAgB,QAAhB,CAAxB,C,wCAOA,GAAMC,CAAAA,SAAS,CAAG,CACvB,OADuB,CAEvB,UAFuB,CAGvB,eAHuB,CAIvB,gBAJuB,CAKvB,WALuB,CAMvB,gBANuB,CAOvB,YAPuB,CAQvB,YARuB,CASvB,YATuB,CAUvB,WAVuB,CAWvB,eAXuB,CAYvB,eAZuB,CAavB,mBAbuB,CAAlB,C,4BAwDA,GAAMC,CAAAA,YAAY,CAAG,CAAC,SAAD,CAArB,C,kCAKA,GAAMC,CAAAA,aAAa,CAAG,CAAC,UAAD,CAAtB,C,oCAKA,GAAMC,CAAAA,WAAW,CAAG,CAAC,QAAD,CAApB,C,gCAKA,GAAMC,CAAAA,YAAY,CAAG,CAAC,SAAD,CAAY,YAAZ,CAA0B,aAA1B,CAArB,C,kCAOA,GAAMC,CAAAA,kBAAkB,CAAG,CAAC,SAAD,CAAY,QAAZ,CAA3B,C,8CAMA,GAAMC,CAAAA,UAAU,CAAG,CAAC,kBAAD,CAAnB,C,8BAKA,GAAMC,CAAAA,aAAa,CAAG,CAAC,UAAD,CAAtB,C,oCAKA,GAAMC,CAAAA,WAAW,CAAG,CACzB,eADyB,CAEzB,OAFyB,CAGzB,YAHyB,CAIzB,aAJyB,CAKzB,QALyB,CAApB,C,gCAeA,GAAMC,CAAAA,YAAY,CAAG,CAAC,cAAD,CAAiB,gBAAjB,CAArB,C,kCAMA,GAAMC,CAAAA,YAAY,CAAG,CAAC,SAAD,CAArB,C","sourcesContent":["import { ImageSourcePropType as RNImageSourcePropType } from 'react-native';\r\n\r\ntype Undefined<T> = { [P in keyof T]: P extends undefined ? T[P] : never };\r\n\r\ntype FilterFlags<Base, Condition> = {\r\n  [Key in keyof Base]: Base[Key] extends Condition ? Key : never;\r\n};\r\n\r\ntype AllowedNames<Base, Condition> = FilterFlags<Base, Condition>[keyof Base];\r\n\r\ntype SubType<Base, Condition> = Pick<Base, AllowedNames<Base, Condition>>;\r\n\r\nexport type OptionalKeys<T> = Exclude<\r\n  keyof T,\r\n  NonNullable<keyof SubType<Undefined<T>, never>>\r\n>;\r\n\r\nexport type ThemeProps<T> = {\r\n  [name: string]: T;\r\n};\r\n\r\ntype ComponentsProps<T> = Omit<\r\n  Pick<T, OptionalKeys<T>>,\r\n  'children' | 'variant'\r\n>;\r\n\r\nexport type VariantType<T> = ComponentsProps<T> & {\r\n  variants?: {\r\n    [name: string]: ComponentsProps<T>;\r\n  };\r\n};\r\n\r\nexport type DefaultProps<Props extends object> = {\r\n  [K in keyof Props]?: Props[K];\r\n};\r\n\r\nexport const borderProps = [\r\n  'borderColor',\r\n  'borderTopColor',\r\n  'borderRightColor',\r\n  'borderBottomColor',\r\n  'borderLeftColor',\r\n  'borderWidth',\r\n  'borderTopWidth',\r\n  'borderRightWidth',\r\n  'borderLeftWidth',\r\n  'borderBottomWidth',\r\n  'borderStartWidth',\r\n  'borderEndWidth',\r\n  'borderStyle',\r\n] as const;\r\nexport interface BorderPropsType {\r\n  borderColor?: string;\r\n  borderTopColor?: string;\r\n  borderRightColor?: string;\r\n  borderBottomColor?: string;\r\n  borderLeftColor?: string;\r\n  borderWidth?: number;\r\n  borderTopWidth?: number;\r\n  borderRightWidth?: number;\r\n  borderLeftWidth?: number;\r\n  borderBottomWidth?: number;\r\n  borderStartWidth?: number;\r\n  borderEndWidth?: number;\r\n  borderStyle?: 'solid' | 'dotted' | 'dashed';\r\n}\r\n\r\nexport const spacingProps = [\r\n  'm',\r\n  'mt',\r\n  'mr',\r\n  'mb',\r\n  'ml',\r\n  'mx',\r\n  'my',\r\n  'ms',\r\n  'p',\r\n  'pt',\r\n  'pr',\r\n  'pb',\r\n  'pl',\r\n  'px',\r\n  'py',\r\n  'ps',\r\n] as const;\r\nexport interface SpacingPropsType {\r\n  m?: string | number;\r\n  mt?: string | number;\r\n  mr?: string | number;\r\n  mb?: string | number;\r\n  ml?: string | number;\r\n  mx?: string | number;\r\n  my?: string | number;\r\n  ms?: string | number;\r\n  p?: string | number;\r\n  pt?: string | number;\r\n  pr?: string | number;\r\n  pb?: string | number;\r\n  pl?: string | number;\r\n  px?: string | number;\r\n  py?: string | number;\r\n  ps?: string | number;\r\n}\r\n\r\nexport const roundedProps = [\r\n  'rounded',\r\n  'roundedTopLeft',\r\n  'roundedTopRight',\r\n  'roundedBottomLeft',\r\n  'roundedBottomRight',\r\n  'roundedTop',\r\n  'roundedLeft',\r\n  'roundedRight',\r\n  'roundedBottom',\r\n] as const;\r\nexport interface RoundedPropsType {\r\n  rounded?: string | number;\r\n  roundedTopLeft?: string | number;\r\n  roundedTopRight?: string | number;\r\n  roundedBottomLeft?: string | number;\r\n  roundedBottomRight?: string | number;\r\n  roundedTop?: string | number;\r\n  roundedLeft?: string | number;\r\n  roundedRight?: string | number;\r\n  roundedBottom?: string | number;\r\n}\r\n\r\nexport const shadowProps = ['shadow', 'shadowColor'] as const;\r\nexport interface ShadowPropsType {\r\n  shadow?: string | number;\r\n  shadowColor?: string;\r\n}\r\n\r\nexport const dimensionProps = [\r\n  'minH',\r\n  'minW',\r\n  'maxH',\r\n  'maxW',\r\n  'h',\r\n  'w',\r\n] as const;\r\nexport interface DimensionPropsType {\r\n  minH?: number | string;\r\n  minW?: number | string;\r\n  maxH?: number | string;\r\n  maxW?: number | string;\r\n  h?: number | string;\r\n  w?: number | string;\r\n}\r\n\r\nexport const flexProps = [\r\n  'row',\r\n  'flex',\r\n  'flexDir',\r\n  'flexWrap',\r\n  'justifyContent',\r\n  'alignSelf',\r\n  'alignItems',\r\n] as const;\r\nexport interface FlexPropsType {\r\n  row?: boolean;\r\n  flex?: number;\r\n  flexDir?: 'row' | 'column' | 'row-reverse' | 'column-reverse';\r\n  flexWrap?: 'wrap' | 'nowrap' | 'wrap-reverse';\r\n  justifyContent?:\r\n    | 'flex-start'\r\n    | 'flex-end'\r\n    | 'center'\r\n    | 'space-between'\r\n    | 'space-around'\r\n    | 'space-evenly';\r\n  alignSelf?:\r\n    | 'auto'\r\n    | 'flex-start'\r\n    | 'flex-end'\r\n    | 'center'\r\n    | 'stretch'\r\n    | 'baseline';\r\n  alignItems?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline';\r\n}\r\n\r\nexport const positionProps = [\r\n  'position',\r\n  'top',\r\n  'right',\r\n  'bottom',\r\n  'left',\r\n] as const;\r\nexport interface PositionPropsType {\r\n  position?: 'absolute' | 'relative';\r\n  top?: number;\r\n  right?: number;\r\n  bottom?: number;\r\n  left?: number;\r\n}\r\n\r\nexport const backgroundProps = ['bg', 'bgImg', 'bgMode'] as const;\r\nexport interface BackgroundPropsType {\r\n  bg?: string;\r\n  bgImg?: RNImageSourcePropType;\r\n  bgMode?: 'contain' | 'cover' | 'stretch' | 'repeat';\r\n}\r\n\r\nexport const textProps = [\r\n  'color',\r\n  'fontSize',\r\n  'textDecorLine',\r\n  'textDecorStyle',\r\n  'fontStyle',\r\n  'textDecorColor',\r\n  'fontWeight',\r\n  'fontFamily',\r\n  'lineHeight',\r\n  'textAlign',\r\n  'textTransform',\r\n  'letterSpacing',\r\n  'textAlignVertical',\r\n] as const;\r\nexport interface TextPropsType {\r\n  color?: string;\r\n  fontSize?: string | number;\r\n  textDecorLine?:\r\n    | 'none'\r\n    | 'underline'\r\n    | 'line-through'\r\n    | 'underline line-through';\r\n  textDecorStyle?: 'solid' | 'double' | 'dotted' | 'dashed';\r\n  fontStyle?: 'normal' | 'italic';\r\n  textDecorColor?: string;\r\n  fontWeight?:\r\n    | 'normal'\r\n    | 'bold'\r\n    | '100'\r\n    | '200'\r\n    | '300'\r\n    | '400'\r\n    | '500'\r\n    | '600'\r\n    | '700'\r\n    | '800'\r\n    | '900';\r\n  fontFamily?: string;\r\n  lineHeight?: number;\r\n  textAlign?: 'auto' | 'left' | 'right' | 'center' | 'justify';\r\n  textTransform?: 'none' | 'uppercase' | 'lowercase' | 'capitalize';\r\n  letterSpacing?: number;\r\n  textAlignVertical?: 'auto' | 'top' | 'bottom' | 'center';\r\n  textDecorationLine?:\r\n    | 'none'\r\n    | 'underline'\r\n    | 'line-through'\r\n    | 'underline line-through';\r\n  textDecorationStyle?: 'solid' | 'double' | 'dotted' | 'dashed';\r\n  textDecorationColor?: string;\r\n  textShadowColor?: string;\r\n  textShadowOffset?: { width: number; height: number };\r\n  textShadowRadius?: number;\r\n}\r\n\r\nexport const opacityProps = ['opacity'] as const;\r\nexport interface OpacityPropsType {\r\n  opacity?: number;\r\n}\r\n\r\nexport const overflowProps = ['overflow'] as const;\r\nexport interface OverflowPropsType {\r\n  overflow?: 'hidden' | 'visible' | 'scroll';\r\n}\r\n\r\nexport const zIndexProps = ['zIndex'] as const;\r\nexport interface ZIndexPropsType {\r\n  zIndex?: number;\r\n}\r\n\r\nexport const loadingProps = ['loading', 'loaderSize', 'loaderColor'] as const;\r\nexport interface LoadingPropsType {\r\n  loading?: boolean;\r\n  loaderSize?: number | string;\r\n  loaderColor?: string;\r\n}\r\n\r\nexport const preffixSuffixProps = ['preffix', 'suffix'] as const;\r\nexport interface PrefixSuffixPropsType {\r\n  suffix?: React.ReactNode;\r\n  prefix?: React.ReactNode;\r\n}\r\n\r\nexport const inputProps = ['focusBorderColor'] as const;\r\nexport interface InputPropsType {\r\n  focusBorderColor?: string;\r\n}\r\n\r\nexport const disabledProps = ['disabled'] as const;\r\nexport interface DisabledPropsType {\r\n  disabled?: null | boolean;\r\n}\r\n\r\nexport const buttonProps = [\r\n  'underlayColor',\r\n  'block',\r\n  'borderless',\r\n  'rippleColor',\r\n  'ripple',\r\n] as const;\r\nexport interface ButtonPropsType {\r\n  underlayColor?: string;\r\n  block?: boolean;\r\n  borderless?: boolean;\r\n  rippleColor?: string;\r\n  ripple?: boolean;\r\n}\r\n\r\nexport const overlayProps = ['overlayColor', 'overlayOpacity'] as const;\r\nexport interface OverlayPropsType {\r\n  overlayColor?: string;\r\n  overlayOpacity?: number;\r\n}\r\n\r\nexport const variantProps = ['variant'] as const;\r\nexport interface VariantPropsType {\r\n  variant?: string;\r\n}\r\n"]}