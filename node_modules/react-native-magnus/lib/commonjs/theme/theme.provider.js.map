{"version":3,"sources":["theme.provider.tsx"],"names":["ThemeProvider","props","theme","themeProp","children","React","useState","defaultTheme","themeState","setThemeState","setTheme","newTheme","mergedTheme"],"mappings":"uWAAA,oDAGA,sCACA,+BACA,4D,iFAMO,GAAMA,CAAAA,aAA0D,CAAG,QAA7DA,CAAAA,aAA6D,CACxEC,KADwE,CAErE,kBACyCA,KADzC,CACKC,KADL,CACYC,SADZ,uBACwB,EADxB,cAC4BC,QAD5B,CACyCH,KADzC,CAC4BG,QAD5B,qBAGiCC,KAAK,CAACC,QAAN,CAClC,uBAAUC,mBAAV,CAAwBJ,SAAxB,CADkC,CAHjC,iEAGIK,UAHJ,qBAGgBC,aAHhB,qBAOH,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAyB,CACxC,GAAMC,CAAAA,WAAW,CAAG,uBAAUL,mBAAV,CAAwBI,QAAxB,CAApB,CACAF,aAAa,CAACG,WAAD,CAAb,CACD,CAHD,CAKA,MACE,qBAAC,mBAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAEV,KAAK,CAAEM,UAAT,CAAqBE,QAAQ,CAARA,QAArB,CAA9B,gEACGN,QADH,CADF,CAKD,CAnBM,C","sourcesContent":["import * as React from 'react';\r\n\r\nimport { ThemeType } from './type';\r\nimport { ThemeContext } from './theme.context';\r\nimport { defaultTheme } from '../style';\r\nimport deepmerge from 'deepmerge';\r\n\r\nexport interface ThemeProviderProps {\r\n  theme?: ThemeType;\r\n}\r\n\r\nexport const ThemeProvider: React.FunctionComponent<ThemeProviderProps> = (\r\n  props\r\n) => {\r\n  const { theme: themeProp = {}, children } = props;\r\n\r\n  const [themeState, setThemeState] = React.useState(\r\n    deepmerge(defaultTheme, themeProp)\r\n  );\r\n\r\n  const setTheme = (newTheme: ThemeType) => {\r\n    const mergedTheme = deepmerge(defaultTheme, newTheme);\r\n    setThemeState(mergedTheme);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme: themeState, setTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"]}